import{_ as n,e as s}from"./app.269ed0ef.js";const a={},t=s(`<h1 id="\u5F02\u6B65" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65" aria-hidden="true">#</a> \u5F02\u6B65</h1><p>Dart \u4EE3\u7801\u5E93\u4E2D\u6709\u5927\u91CF\u8FD4\u56DE Future \u6216 Stream \u5BF9\u8C61\u7684\u51FD\u6570\uFF0C\u8FD9\u4E9B\u51FD\u6570\u90FD\u662F\u5F02\u6B65\u7684\uFF0C\u5B83\u4EEC\u4F1A\u5728\u8017\u65F6\u64CD\u4F5C\uFF08\u6BD4\u5982 I/O\uFF09\u6267\u884C\u5B8C\u6BD5\u524D\u76F4\u63A5\u8FD4\u56DE\u800C\u4E0D\u4F1A\u7B49\u5F85\u8017\u65F6\u64CD\u4F5C\u6267\u884C\u5B8C\u6BD5\u3002</p><h2 id="future" tabindex="-1"><a class="header-anchor" href="#future" aria-hidden="true">#</a> Future</h2><p>\u901A\u8FC7\u4E0B\u9762\u7684\u65B9\u5F0F\u53EF\u4EE5\u83B7\u5F97 Future \u6267\u884C\u5B8C\u6210\u7684\u7ED3\u679C\uFF1A</p><ul><li>\u4F7F\u7528 <code>async</code> \u548C <code>await</code>\u3002</li><li>\u4F7F\u7528 Future API\u3002</li></ul><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>\u5FC5\u987B\u5728\u5E26\u6709 async \u5173\u952E\u5B57\u7684\u5F02\u6B65\u51FD\u6570\u4E2D\u4F7F\u7528 await\u3002</p><p>\u5F02\u6B65\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u5E94\u5F53\u662F Future\u3002</p></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li><code>Future&lt;T&gt;</code> \u5B9E\u4F8B\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u7C7B\u578B\u4E3A T \u7684\u503C\u3002</li><li>\u5982\u679C\u4E00\u4E2A Future \u5B9E\u4F8B\u6CA1\u6709\u53EF\u7528\u7684\u8FD4\u56DE\u503C\uFF0C\u5219\u8FD9\u4E2A\u5B9E\u4F8B\u7684\u7C7B\u578B\u662F <code>Future&lt;void&gt;</code>\u3002</li><li>\u4E00\u4E2A Future \u5B9E\u4F8B\u53EF\u4EE5\u662F\u5DF2\u5B8C\u6210\u6216\u8005\u662F\u672A\u5B8C\u6210\u72B6\u6001\u3002</li><li>\u5F53\u8C03\u7528\u4E00\u4E2A\u8FD4\u56DE Future \u7684\u65B9\u6CD5\u65F6\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u628A\u4EFB\u52A1\u52A0\u5165\u961F\u5217\u7136\u540E\u8FD4\u56DE\u4E00\u4E2A\u672A\u5B8C\u6210\u72B6\u6001\u7684 Future \u5B9E\u4F8B\u3002</li><li>\u5F53\u4E00\u4E2A Future \u5B9E\u4F8B\u7684\u64CD\u4F5C\u5B8C\u6210\u65F6\uFF0C\u8FD9\u4E2A\u5B9E\u4F8B\u4F1A\u8FDB\u5165\u5B8C\u6210\u72B6\u6001\u5E76\u9644\u5E26\u4E00\u4E2A\u503C\u6216\u8005\u662F\u9519\u8BEF\u3002</li></ul></div><h2 id="\u58F0\u660E\u5F02\u6B65\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u58F0\u660E\u5F02\u6B65\u51FD\u6570" aria-hidden="true">#</a> \u58F0\u660E\u5F02\u6B65\u51FD\u6570</h2><p>\u5F02\u6B65\u51FD\u6570\u662F\u51FD\u6570\u4F53\u88AB <code>async</code> \u5173\u952E\u5B57\u6807\u8BB0\u7684\u51FD\u6570\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string">&#39;dart:io&#39;</span><span class="token punctuation">;</span>

<span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>int second <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> second<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&quot;wuhu&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> args<span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">demo</span><span class="token punctuation">(</span>second<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Future \u975E\u5E38\u7C7B\u4F3C JavaScript \u4E2D\u7684 Promise\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">fetchUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Future</span><span class="token punctuation">.</span><span class="token function">delayed</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">fetchUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catchError</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="stream" tabindex="-1"><a class="header-anchor" href="#stream" aria-hidden="true">#</a> Stream</h2><p>\u4ECE Stream \u4E2D\u83B7\u53D6\u503C\u7684\u65B9\u6CD5\uFF1A</p><ul><li>\u4F7F\u7528 <code>async</code> \u5173\u952E\u5B57\u548C\u4E00\u4E2A\u5F02\u6B65\u5FAA\u73AF\uFF08<code>await for</code>\uFF09\u3002</li><li>\u4F7F\u7528 Stream API\u3002</li></ul><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">await</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>varOrType identifier <span class="token keyword">in</span> expression<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Executes each time the stream emits a value.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8868\u8FBE\u5F0F\u7684\u7C7B\u578B\u5FC5\u987B\u662F Stream\uFF0C\u6267\u884C\u6D41\u7A0B\u5982\u4E0B\uFF1A</p><ul><li>\u7B49\u5F85\u76F4\u5230 Stream \u8FD4\u56DE\u4E00\u4E2A\u6570\u636E\u3002</li><li>\u4F7F\u7528 Stream \u8FD4\u56DE\u7684\u6570\u636E\u6267\u884C\u5FAA\u73AF\u4F53\u3002</li><li>\u91CD\u590D\u4E0A\u9762\u4E24\u4E2A\u8FC7\u7A0B\u76F4\u5230 Stream \u7684\u6570\u636E\u8FD4\u56DE\u5B8C\u6BD5\u3002</li></ul>`,18);function p(e,c){return t}var u=n(a,[["render",p]]);export{u as default};
