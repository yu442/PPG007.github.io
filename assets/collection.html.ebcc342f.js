import{_ as n,e as s}from"./app.269ed0ef.js";const a={},p=s(`<h1 id="\u96C6\u5408\u4E0D\u5B89\u5168" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408\u4E0D\u5B89\u5168" aria-hidden="true">#</a> \u96C6\u5408\u4E0D\u5B89\u5168</h1><h2 id="list-\u4E0D\u5B89\u5168" tabindex="-1"><a class="header-anchor" href="#list-\u4E0D\u5B89\u5168" aria-hidden="true">#</a> List \u4E0D\u5B89\u5168</h2><p>\u89E3\u51B3\u65B9\u6848\uFF1A</p><ul><li><p>Vector\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> strings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Vector \u7684 add \u65B9\u6CD5\u5B89\u5168\u7684\u539F\u56E0\uFF1A</p><p>\u4F7F\u7528\u4E86synchronized\u5173\u952E\u5B57\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token function">ensureCapacityHelper</span><span class="token punctuation">(</span>elementCount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData<span class="token punctuation">[</span>elementCount<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>Collections.synchronizedList\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> objects <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">synchronizedList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>CopyOnWriteArrayList\u5199\u5165\u65F6\u590D\u5236\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">CopyOnWriteArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> strings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CopyOnWriteArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li></ul><h2 id="set-\u4E0D\u5B89\u5168" tabindex="-1"><a class="header-anchor" href="#set-\u4E0D\u5B89\u5168" aria-hidden="true">#</a> Set \u4E0D\u5B89\u5168</h2><p>\u89E3\u51B3\u65B9\u6848\uFF1A</p><ul><li><p>Collections.synchronizedSet\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> objects <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">synchronizedSet</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>CopyOnWriteArraySet\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">CopyOnWriteArraySet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> strings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CopyOnWriteArraySet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>HashSet \u901A\u8FC7 HashMap \u7684\u952E\u786E\u4FDD\u4E0D\u4F1A\u91CD\u590D\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> PRESENT<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><h2 id="map-\u4E0D\u5B89\u5168" tabindex="-1"><a class="header-anchor" href="#map-\u4E0D\u5B89\u5168" aria-hidden="true">#</a> Map \u4E0D\u5B89\u5168</h2><h3 id="hashmap-\u7684\u6269\u5BB9\u673A\u5236\u548C\u52A0\u8F7D\u56E0\u5B50" tabindex="-1"><a class="header-anchor" href="#hashmap-\u7684\u6269\u5BB9\u673A\u5236\u548C\u52A0\u8F7D\u56E0\u5B50" aria-hidden="true">#</a> HashMap \u7684\u6269\u5BB9\u673A\u5236\u548C\u52A0\u8F7D\u56E0\u5B50</h3><p>\u9ED8\u8BA4\u52A0\u8F7D\u56E0\u5B50\u3001\u9ED8\u8BA4\u521D\u59CB\u5BB9\u91CF\u3001\u6700\u5927\u5BB9\u91CF\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token keyword">extends</span> <span class="token class-name">AbstractMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token keyword">implements</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>
    <span class="token comment">//  \u9ED8\u8BA4\u7684\u521D\u59CB\u5BB9\u91CF\uFF08\u5BB9\u91CF\u4E3AHashMap\u4E2D\u6876\u7684\u6570\u76EE\uFF09\u662F16\uFF0C\u4E14\u5B9E\u9645\u5BB9\u91CF\u5FC5\u987B\u662F2\u7684\u6574\u6570\u6B21\u5E42\u3002</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_INITIAL_CAPACITY <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6700\u5927\u5BB9\u91CF\uFF08\u5FC5\u987B\u662F2\u7684\u5E42\u4E14\u5C0F\u4E8E2\u768430\u6B21\u65B9\uFF0C\u4F20\u5165\u5BB9\u91CF\u8FC7\u5927\u5C06\u88AB\u8FD9\u4E2A\u503C\u66FF\u6362\uFF09</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAXIMUM_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span>
    <span class="token comment">// \u9ED8\u8BA4\u52A0\u8F7D\u56E0\u5B50</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> DEFAULT_LOAD_FACTOR <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span>
    <span class="token comment">//... \u7701\u7565</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6700\u5927\u5BB9\u91CF\u7B49\u4E8E\u9ED8\u8BA4\u52A0\u8F7D\u56E0\u5B50\u548C\u521D\u59CB\u5BB9\u91CF\u7684\u4E58\u79EF\uFF0C\u662F\u7528\u6765\u9884\u8B66\u7684\uFF0C\u5982\u679C HashMap \u4E2D\u7684\u5BB9\u91CF\u8D85\u8FC7\u8FD9\u4E2A\u9600\u503C\u4E86\uFF0C\u90A3\u5C31\u4F1A\u6267\u884C\u6269\u5BB9\u64CD\u4F5C\uFF0C\u4F4E\u4E8E\u5219\u6CA1\u4E8B\u3002</p><p>\u52A0\u8F7D\u56E0\u5B50\u5B58\u5728\u7684\u539F\u56E0\uFF0C\u8FD8\u662F\u56E0\u4E3A\u51CF\u7F13\u54C8\u5E0C\u51B2\u7A81\uFF0C\u5982\u679C\u521D\u59CB\u6876\u4E3A 16\uFF0C\u7B49\u5230\u6EE1 16 \u4E2A\u5143\u7D20\u624D\u6269\u5BB9\uFF0C\u67D0\u4E9B\u6876\u91CC\u53EF\u80FD\u5C31\u6709\u4E0D\u6B62\u4E00\u4E2A\u5143\u7D20\u4E86\u3002\u6240\u4EE5\u52A0\u8F7D\u56E0\u5B50\u9ED8\u8BA4\u4E3A 0.75\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5927\u5C0F\u4E3A 16 \u7684 HashMap\uFF0C\u5230\u4E86\u7B2C 13 \u4E2A\u5143\u7D20\uFF0C\u5C31\u4F1A\u6269\u5BB9\u6210 32\u3002</p><p>\u6240\u4EE5\u5982\u679C\u4F60\u5FC3\u76EE\u4E2D\u6709\u660E\u786E\u7684 Map \u5927\u5C0F\uFF0C\u8BBE\u5B9A\u65F6\u4E00\u5B9A\u8981\u8003\u8651\u52A0\u8F7D\u56E0\u5B50\u7684\u5B58\u5728\u3002</p><p>\u6269\u5BB9\u9608\u503C\u5C31\u662F\u521D\u59CB\u6876\u5927\u5C0F(\u9ED8\u8BA4 16)\u4E58\u4EE5\u52A0\u8F7D\u56E0\u5B50</p><p>HashMap \u542B\u53C2\u6784\u9020\u5668\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal initial capacity: &quot;</span> <span class="token operator">+</span>
                                            initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span>
        initialCapacity <span class="token operator">=</span> MAXIMUM_CAPACITY<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loadFactor <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token class-name">Float</span><span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>loadFactor<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal load factor: &quot;</span> <span class="token operator">+</span>
                                            loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> loadFactor<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>threshold <span class="token operator">=</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,18);function e(t,c){return p}var l=n(a,[["render",e]]);export{l as default};
