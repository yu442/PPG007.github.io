import{_ as p,r as t,o as e,c as o,a as n,d as c,F as l,e as u,b as s}from"./app.269ed0ef.js";const r={},i=u(`<h1 id="\u5E76\u53D1\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5E76\u53D1\u7F16\u7A0B" aria-hidden="true">#</a> \u5E76\u53D1\u7F16\u7A0B</h1><h2 id="goroutine" tabindex="-1"><a class="header-anchor" href="#goroutine" aria-hidden="true">#</a> Goroutine</h2><p><em>\u4E00\u4E2A goroutine \u5FC5\u5B9A\u5BF9\u5E94\u4E00\u4E2A\u51FD\u6570\uFF0C\u53EF\u4EE5\u521B\u5EFA\u591A\u4E2A goroutine \u53BB\u6267\u884C\u76F8\u540C\u7684\u51FD\u6570\u3002</em></p><p>\u4E3B\u534F\u7A0B\u9000\u51FA\u540E\uFF0C\u5176\u4ED6\u4EFB\u52A1\u5C06\u4E00\u540C\u7ED3\u675F\u3002</p><h2 id="runtime-\u5305" tabindex="-1"><a class="header-anchor" href="#runtime-\u5305" aria-hidden="true">#</a> runtime \u5305</h2><ul><li>runtime.Gosched()\uFF1A\u7C7B\u4F3C Java Thread.yield()\u3002</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> count <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
      time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
      count<span class="token operator">++</span>
      fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>
      <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">5</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> count <span class="token operator">!=</span> <span class="token number">5</span> <span class="token punctuation">{</span>
    runtime<span class="token punctuation">.</span><span class="token function">Gosched</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;over&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li>runtime.Goexit()\uFF1A\u9000\u51FA\u5F53\u524D\u534F\u7A0B\u3002</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
      time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
      count<span class="token operator">++</span>
      fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>
      <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">10</span> <span class="token punctuation">{</span>
        runtime<span class="token punctuation">.</span><span class="token function">Goexit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> count <span class="token operator">!=</span> <span class="token number">10</span> <span class="token punctuation">{</span>
    runtime<span class="token punctuation">.</span><span class="token function">Gosched</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;over&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>Go \u8BED\u8A00\u4E2D\u64CD\u4F5C\u7CFB\u7EDF\u7EBF\u7A0B\u548C goroutine \u7684\u5173\u7CFB\uFF1A</p><ul><li>\u4E00\u4E2A\u64CD\u4F5C\u7CFB\u7EDF\u7EBF\u7A0B\u5BF9\u5E94\u591A\u4E2A\u7528\u6237\u6001 goroutine\u3002</li><li>go \u7A0B\u5E8F\u53EF\u4EE5\u540C\u65F6\u4F7F\u7528\u591A\u4E2A\u64CD\u4F5C\u7CFB\u7EDF\u7EBF\u7A0B\u3002</li><li>goroutine \u548C\u64CD\u4F5C\u7CFB\u7EDF\u7EBF\u7A0B\u662F\u591A\u5BF9\u591A\u7684\u5173\u7CFB\u3002</li></ul><h2 id="channel" tabindex="-1"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> channel</h2><p>channel \u53EF\u4EE5\u8BA9\u4E00\u4E2A goroutine \u53D1\u9001\u7279\u5B9A\u503C\u5230\u53E6\u4E00\u4E2A goroutine\u3002</p><p>channel \u662F\u4E00\u79CD\u7279\u6B8A\u7C7B\u578B\uFF0C\u9075\u5FAA\u5148\u8FDB\u5148\u51FA\u539F\u5219\uFF0C\u4FDD\u8BC1\u6536\u53D1\u6570\u636E\u7684\u987A\u5E8F\uFF0C\u6BCF\u4E00\u4E2A\u901A\u9053\u90FD\u662F\u4E00\u4E2A\u5177\u4F53\u7C7B\u578B\u7684\u5BFC\u7BA1\uFF0C\u4E5F\u5C31\u662F\u58F0\u660E channel \u7684\u65F6\u540E\u9700\u8981\u4E3A\u5176\u6307\u5B9A\u5143\u7D20\u7C7B\u578B\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> ch1 <span class="token keyword">chan</span> <span class="token builtin">int</span>   <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u4F20\u9012\u6574\u578B\u7684\u901A\u9053</span>
<span class="token keyword">var</span> ch2 <span class="token keyword">chan</span> <span class="token builtin">bool</span>  <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u4F20\u9012\u5E03\u5C14\u578B\u7684\u901A\u9053</span>
<span class="token keyword">var</span> ch3 <span class="token keyword">chan</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u4F20\u9012int\u5207\u7247\u7684\u901A\u9053</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u58F0\u660E\u7684 channel \u9700\u8981\u4F7F\u7528 make \u51FD\u6570\u521D\u59CB\u5316\u4E4B\u540E\u624D\u80FD\u4F7F\u7528\uFF0C\u5176\u4E2D\u7F13\u51B2\u5927\u5C0F\u662F\u53EF\u9009\u7684\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>channel \u7684\u64CD\u4F5C\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u53D1\u9001</span>
ch <span class="token operator">&lt;-</span> <span class="token number">123</span>

<span class="token comment">// \u63A5\u6536</span>
x <span class="token operator">:=</span> <span class="token operator">&lt;-</span> ch
<span class="token operator">&lt;-</span> ch <span class="token comment">// \u5FFD\u7565\u63A5\u6536\u503C\u3002</span>

<span class="token comment">// \u5173\u95ED</span>
<span class="token comment">// \u53EA\u6709\u5728\u901A\u77E5\u63A5\u6536\u65B9 goroutine \u6240\u6709\u7684\u6570\u636E\u90FD\u53D1\u9001\u5B8C\u6BD5\u7684\u65F6\u5019\u624D\u9700\u8981\u5173\u95ED\u901A\u9053\uFF0C\u901A\u9053\u662F\u53EF\u4EE5\u88AB\u5783\u573E\u56DE\u6536\u7684\uFF0C\u56E0\u6B64\u5173\u95ED\u901A\u9053\u4E0D\u662F\u5FC5\u987B\u7684\u3002</span>
<span class="token function">close</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5BF9\u4E8E\u5DF2\u7ECF\u5173\u95ED\u7684\u901A\u9053\uFF1A</p><ul><li>\u5BF9\u4E00\u4E2A\u5173\u95ED\u7684\u901A\u9053\u518D\u53D1\u9001\u503C\u5C31\u4F1A\u5BFC\u81F4 panic\u3002</li><li>\u5BF9\u4E00\u4E2A\u5173\u95ED\u7684\u901A\u9053\u8FDB\u884C\u63A5\u6536\u4F1A\u4E00\u81F4\u83B7\u53D6\u503C\u76F4\u5230\u901A\u9053\u4E3A\u7A7A\u3002</li><li>\u5BF9\u4E00\u4E2A\u5173\u95ED\u5E76\u4E14\u6CA1\u6709\u503C\u7684\u901A\u9053\u6267\u884C\u63A5\u6536\u64CD\u4F5C\u4F1A\u5F97\u5230\u5BF9\u5E94\u7C7B\u578B\u7684\u96F6\u503C\u3002</li><li>\u5173\u95ED\u4E00\u4E2A\u5DF2\u7ECF\u5173\u95ED\u7684\u901A\u9053\u4F1A\u5BFC\u81F4 panic\u3002</li></ul><p>\u65E0\u7F13\u51B2\u7684\u901A\u9053\uFF1A</p><p><img src="https://www.topgoer.com/static/7.1/3.png" alt="\u65E0\u7F13\u51B2\u7684\u901A\u9053"></p><p>\u65E0\u7F13\u51B2\u7684\u901A\u9053\u53EA\u6709\u5728\u6709\u4EBA\u63A5\u6536\u503C\u7684\u65F6\u5019\u624D\u80FD\u53D1\u9001\u503C\u3002\u4F7F\u7528\u65E0\u7F13\u51B2\u7684\u901A\u9053\u5C06\u5BFC\u81F4\u53D1\u9001\u548C\u63A5\u6536\u540C\u6B65\u5316\uFF0C\u56E0\u6B64\u4E5F\u88AB\u79F0\u4E3A\u540C\u6B65\u901A\u9053\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">string</span><span class="token punctuation">)</span>
  <span class="token keyword">go</span> <span class="token function">receive</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span>
  ch <span class="token operator">&lt;-</span> <span class="token string">&quot;123&quot;</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D1\u9001\u9648\u5764&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> runtime<span class="token punctuation">.</span><span class="token function">NumGoroutine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">{</span>
    runtime<span class="token punctuation">.</span><span class="token function">Gosched</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">receive</span><span class="token punctuation">(</span>ch <span class="token keyword">chan</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span>
  x <span class="token operator">:=</span> <span class="token operator">&lt;-</span>ch
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u63A5\u6536\u9648\u5764&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u6709\u7F13\u51B2\u7684\u901A\u9053\uFF1A</p><p><img src="https://www.topgoer.com/static/7.1/4.png" alt="\u6709\u7F13\u51B2\u7684\u901A\u9053"></p><p>\u53EA\u8981\u901A\u9053\u7684\u5BB9\u91CF\u5927\u4E8E\u96F6\uFF0C\u90A3\u4E48\u5C31\u662F\u6709\u7F13\u51B2\u7684\u901A\u9053\uFF0C\u901A\u9053\u7684\u5BB9\u91CF\u8868\u793A\u901A\u9053\u4E2D\u80FD\u5B58\u653E\u5143\u7D20\u7684\u6570\u91CF\u3002\u53EF\u4EE5\u4F7F\u7528 len \u51FD\u6570\u83B7\u53D6\u901A\u9053\u5185\u7684\u5143\u7D20\u6570\u91CF\uFF0C\u4F7F\u7528 cap \u51FD\u6570\u83B7\u53D6\u901A\u9053\u7684\u5BB9\u91CF\u3002</p><p>\u5224\u65AD\u901A\u9053\u662F\u5426\u5173\u95ED\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u65B9\u5F0F\u4E00\uFF1A\u5728\u4ECE\u901A\u9053\u4E2D\u53D6\u503C\u65F6\uFF0C\u901A\u8FC7\u63A5\u6536\u7B2C\u4E8C\u4E2A\u8FD4\u56DE\u503C\u5224\u65AD\u662F\u5426\u5173\u95ED\u3002</span>
<span class="token keyword">for</span> <span class="token punctuation">{</span>
  i<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token operator">&lt;-</span> ch1
  <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
    <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
  ch2 <span class="token operator">&lt;-</span> i <span class="token operator">*</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65B9\u5F0F\u4E8C\uFF1A\u901A\u8FC7 range \u5FAA\u73AF\u81EA\u52A8\u5224\u65AD\u3002</span>
<span class="token keyword">for</span> i<span class="token operator">:=</span> <span class="token keyword">range</span> ch2 <span class="token punctuation">{</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5355\u5411\u901A\u9053\uFF1A</p><p>\u53EF\u4EE5\u5728\u4F20\u53C2\u65F6\u5C06\u901A\u9053\u5B9A\u4E49\u4E3A\u5355\u5411\u7684\uFF0C\u53EA\u80FD\u53D1\u9001\u6216\u8005\u53EA\u80FD\u63A5\u6536\uFF0C\u53CC\u5411\u901A\u9053\u53EF\u4EE5\u8F6C\u6362\u4E3A\u5355\u5411\u901A\u9053\uFF0C\u53CD\u4E4B\u4E0D\u884C\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ch1 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
  ch2 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
  <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>out <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
      out <span class="token operator">&lt;-</span> i
    <span class="token punctuation">}</span>
    <span class="token function">close</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">(</span>ch1<span class="token punctuation">)</span>
  <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>in <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">,</span> out <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
      i<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token operator">&lt;-</span>in
      <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
        <span class="token keyword">break</span>
      <span class="token punctuation">}</span>
      out <span class="token operator">&lt;-</span> i <span class="token operator">*</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
    <span class="token function">close</span><span class="token punctuation">(</span>ch2<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">(</span>ch1<span class="token punctuation">,</span> ch2<span class="token punctuation">)</span>
  <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> ch2 <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><table><thead><tr><th>channel \u72B6\u6001</th><th>nil</th><th>\u975E\u7A7A</th><th>\u7A7A</th><th>\u6EE1</th><th>\u672A\u6EE1</th></tr></thead><tbody><tr><td>\u63A5\u6536</td><td>\u963B\u585E</td><td>\u63A5\u6536\u503C</td><td>\u963B\u585E</td><td>\u63A5\u6536\u503C</td><td>\u63A5\u6536\u503C</td></tr><tr><td>\u53D1\u9001</td><td>\u963B\u585E</td><td>\u53D1\u9001\u503C</td><td>\u53D1\u9001\u503C</td><td>\u963B\u585E</td><td>\u53D1\u9001\u503C</td></tr><tr><td>\u5173\u95ED</td><td>panic</td><td>\u5173\u95ED\u6210\u529F\uFF0C\u8BFB\u53D6\u5B8C\u6570\u636E\u540E\u8FD4\u56DE\u96F6\u503C</td><td>\u5173\u95ED\u6210\u529F\uFF0C\u8FD4\u56DE\u96F6\u503C</td><td>\u5173\u95ED\u6210\u529F\uFF0C\u8BFB\u5B8C\u6570\u636E\u540E\u8FD4\u56DE\u96F6\u503C</td><td>\u5173\u95ED\u6210\u529F\uFF0C\u8BFB\u5B8C\u6570\u636E\u540E\u8FD4\u56DE\u96F6\u503C</td></tr></tbody></table><h2 id="goroutine-\u6C60" tabindex="-1"><a class="header-anchor" href="#goroutine-\u6C60" aria-hidden="true">#</a> Goroutine \u6C60</h2><p>\u76EE\u7684\uFF1A\u63A7\u5236 goroutine \u7684\u6570\u91CF\uFF0C\u9632\u6B62\u6570\u91CF\u66B4\u6DA8\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u540C\u6B65\u4E24\u4E2A\u901A\u9053\u4E0E\u5173\u95ED\u64CD\u4F5C\uFF0C\u9632\u6B62\u6B7B\u9501</span>
<span class="token keyword">var</span> wg1 sync<span class="token punctuation">.</span>WaitGroup
<span class="token keyword">var</span> wg2 sync<span class="token punctuation">.</span>WaitGroup

<span class="token keyword">type</span> Job <span class="token keyword">struct</span><span class="token punctuation">{</span>
  Id <span class="token builtin">int</span>
  RandNum <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Result <span class="token keyword">struct</span><span class="token punctuation">{</span>
  Job <span class="token operator">*</span>Job
  Sum <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  jobChan <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token operator">*</span>Job<span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>
  resultChan <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token operator">*</span>Result<span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>
  <span class="token function">createPool</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> jobChan<span class="token punctuation">,</span> resultChan<span class="token punctuation">)</span>
  wg1<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> wg1<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> result <span class="token operator">:=</span> <span class="token keyword">range</span> resultChan <span class="token punctuation">{</span>
      b<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
      fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  id <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">;</span>id <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span><span class="token punctuation">{</span>
    id <span class="token operator">++</span>
    job <span class="token operator">:=</span> <span class="token operator">&amp;</span>Job<span class="token punctuation">{</span>
      Id<span class="token punctuation">:</span> id<span class="token punctuation">,</span>
      RandNum<span class="token punctuation">:</span> rand<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    jobChan <span class="token operator">&lt;-</span> job
  <span class="token punctuation">}</span>
  <span class="token function">close</span><span class="token punctuation">(</span>jobChan<span class="token punctuation">)</span>
  wg2<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">close</span><span class="token punctuation">(</span>resultChan<span class="token punctuation">)</span>
  wg1<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">createPool</span><span class="token punctuation">(</span>num <span class="token builtin">int</span><span class="token punctuation">,</span> jobChan <span class="token keyword">chan</span> <span class="token operator">*</span>Job<span class="token punctuation">,</span> resultChan <span class="token keyword">chan</span> <span class="token operator">*</span>Result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    wg2<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>jobChan <span class="token keyword">chan</span> <span class="token operator">*</span>Job<span class="token punctuation">,</span> resultChan <span class="token keyword">chan</span> <span class="token operator">*</span>Result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">defer</span> wg2<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">for</span> job <span class="token operator">:=</span> <span class="token keyword">range</span> jobChan <span class="token punctuation">{</span>
        sum <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        temp <span class="token operator">:=</span> job<span class="token punctuation">.</span>RandNum
        <span class="token keyword">for</span> temp <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">{</span>
          sum <span class="token operator">+=</span> temp <span class="token operator">%</span> <span class="token number">10</span>
          temp <span class="token operator">/=</span> <span class="token number">10</span>
        <span class="token punctuation">}</span>
        r <span class="token operator">:=</span> <span class="token operator">&amp;</span>Result<span class="token punctuation">{</span>
          Sum <span class="token punctuation">:</span> sum<span class="token punctuation">,</span>
          Job<span class="token punctuation">:</span> job<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        resultChan <span class="token operator">&lt;-</span> r
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span>jobChan<span class="token punctuation">,</span> resultChan<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><h2 id="select" tabindex="-1"><a class="header-anchor" href="#select" aria-hidden="true">#</a> select</h2><p>select \u540C\u65F6\u76D1\u542C\u4E00\u4E2A\u6216\u591A\u4E2A channel\uFF0C\u76F4\u5230\u5176\u4E2D\u4E00\u4E2A channel ready\uFF0C\u5982\u679C\u591A\u4E2A channel \u540C\u65F6 ready\uFF0C\u5219\u968F\u673A\u9009\u62E9\u4E00\u4E2A\u6267\u884C\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">select</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> s1 <span class="token operator">:=</span> <span class="token operator">&lt;-</span>output1<span class="token punctuation">:</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;s1=&quot;</span><span class="token punctuation">,</span> s1<span class="token punctuation">)</span>
<span class="token keyword">case</span> s2 <span class="token operator">:=</span> <span class="token operator">&lt;-</span>output2<span class="token punctuation">:</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;s2=&quot;</span><span class="token punctuation">,</span> s2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u9501" tabindex="-1"><a class="header-anchor" href="#\u9501" aria-hidden="true">#</a> \u9501</h2><p>\u4E92\u65A5\u9501\uFF1A\u4FDD\u8BC1\u540C\u65F6\u53EA\u6709\u4E00\u4E2A goroutine \u53EF\u4EE5\u8BBF\u95EE\u5171\u4EAB\u8D44\u6E90\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;fmt&quot;</span>
  <span class="token string">&quot;sync&quot;</span>
<span class="token punctuation">)</span>
<span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
<span class="token keyword">var</span> lock sync<span class="token punctuation">.</span>Mutex
<span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>wtg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">defer</span> wtg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      lock<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      count<span class="token operator">++</span>
      lock<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wg<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u8BFB\u5199\u4E92\u65A5\u9501\uFF1A\u5F53\u4E00\u4E2A goroutine \u83B7\u53D6\u8BFB\u9501\u540E\uFF0C\u5176\u4ED6 goroutine \u53EF\u4EE5\u7EE7\u7EED\u83B7\u53D6\u8BFB\u9501\uFF0C\u4F46\u4E0D\u80FD\u83B7\u53D6\u5199\u9501\uFF1B\u5F53\u4E00\u4E2A goroutine \u83B7\u53D6\u5199\u9501\u4E4B\u540E\uFF0C\u5176\u4ED6\u7684 goroutine \u65E0\u8BBA\u662F\u83B7\u53D6\u8BFB\u9501\u8FD8\u662F\u5199\u9501\u90FD\u4F1A\u7B49\u5F85\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> lock sync<span class="token punctuation">.</span>RWMutex
lock<span class="token punctuation">.</span><span class="token function">RLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u52A0\u8BFB\u9501</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>
lock<span class="token punctuation">.</span><span class="token function">RUnlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u91CA\u653E\u8BFB\u9501</span>
lock<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u52A0\u5199\u9501</span>
count<span class="token operator">++</span>
lock<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u52A0\u8BFB\u9501</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u540C\u6B65" tabindex="-1"><a class="header-anchor" href="#\u540C\u6B65" aria-hidden="true">#</a> \u540C\u6B65</h2><p>\u4F7F\u7528 <code>sync.WaitGroup</code> \u5B9E\u73B0\u5E76\u53D1\u4EFB\u52A1\u7684\u540C\u6B65\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u5982\u679C\u8981\u4F7F\u7528\u53C2\u6570\u4F20\u9012 wg\uFF0C\u9700\u8981\u4F20\u9012\u6307\u9488\uFF0C\u56E0\u4E3A wg \u662F\u7ED3\u6784\u4F53\u3002</span>
<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>wtg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">defer</span> wtg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  count<span class="token operator">++</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4F7F\u7528 <code>sync.Once</code> \u552F\u4E00\u7684\u6267\u884C\u4E00\u4E2A\u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> user <span class="token operator">*</span>User
<span class="token keyword">var</span> once sync<span class="token punctuation">.</span>Once
<span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token function">getInstence</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">getInstence</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> user <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;getInstence&quot;</span><span class="token punctuation">)</span>
    once<span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>initUser<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">initUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;initUser&quot;</span><span class="token punctuation">)</span>
  user <span class="token operator">=</span> <span class="token operator">&amp;</span>User<span class="token punctuation">{</span>
    Username<span class="token punctuation">:</span> <span class="token string">&quot;koston&quot;</span><span class="token punctuation">,</span>
    Age<span class="token punctuation">:</span>      <span class="token number">21</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u4F7F\u7528\u7EBF\u7A0B\u5B89\u5168\u7684 map\uFF1A<code>sync.Map</code>\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> m <span class="token operator">=</span> sync<span class="token punctuation">.</span>Map<span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// Store() \u5B58\u50A8\u4E00\u4E2A\u952E\u503C\u5BF9\u3002</span>
m<span class="token punctuation">.</span><span class="token function">Store</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
<span class="token comment">// Load() \u6839\u636E\u952E\u83B7\u53D6\u503C\u3002</span>
<span class="token comment">// LoadOrStore() \u5982\u679C\u4F20\u5165\u7684 key \u5B58\u5728\u5C31\u83B7\u53D6\u503C\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u5C31\u6DFB\u52A0\u952E\u503C\u5BF9\u3002</span>
<span class="token comment">// Delete() \u5220\u9664\u952E\u503C\u5BF9</span>
<span class="token comment">// Range() \u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u7C7B\u578B\u53C2\u6570\uFF0C\u8BE5\u53C2\u6570\u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u904D\u5386\u3002</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u539F\u5B50\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u539F\u5B50\u64CD\u4F5C" aria-hidden="true">#</a> \u539F\u5B50\u64CD\u4F5C</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>atomic<span class="token punctuation">.</span><span class="token function">AddInt64</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,54),k=s("\u5176\u4ED6 atomic \u5305\u4E0B\u7684\u65B9\u6CD5\uFF1A"),b={href:"https://www.topgoer.com/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C%E5%92%8Catomic%E5%8C%85.html#atomic%E5%8C%85",target:"_blank",rel:"noopener noreferrer"},m=s("atomic");function d(g,f){const a=t("ExternalLinkIcon");return e(),o(l,null,[i,n("p",null,[k,n("a",b,[m,c(a)])])],64)}var w=p(r,[["render",d]]);export{w as default};
