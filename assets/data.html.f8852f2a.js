import{_ as n,e as s}from"./app.269ed0ef.js";const a={},p=s(`<h1 id="\u6570\u636E\u89E3\u6790\u4E0E\u7ED1\u5B9A" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u89E3\u6790\u4E0E\u7ED1\u5B9A" aria-hidden="true">#</a> \u6570\u636E\u89E3\u6790\u4E0E\u7ED1\u5B9A</h1><h2 id="json\u3001\u8868\u5355-\u6570\u636E\u89E3\u6790\u4E0E\u7ED1\u5B9A" tabindex="-1"><a class="header-anchor" href="#json\u3001\u8868\u5355-\u6570\u636E\u89E3\u6790\u4E0E\u7ED1\u5B9A" aria-hidden="true">#</a> JSON\u3001\u8868\u5355 \u6570\u636E\u89E3\u6790\u4E0E\u7ED1\u5B9A</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u901A\u8FC7 tag \u6307\u5B9A\u5404\u79CD\u6570\u636E\u683C\u5F0F\u4E2D\u5BF9\u5E94\u7684\u952E\u548C\u662F\u5426\u5FC5\u9700</span>
  Username <span class="token builtin">string</span> <span class="token string">\`form:&quot;username&quot; uri:&quot;username&quot; json:&quot;username&quot; xml:&quot;username&quot; binding:&quot;required&quot;\`</span>
  Password <span class="token builtin">string</span> <span class="token string">\`form:&quot;password&quot; uri:&quot;username&quot; json:&quot;password&quot; xml:&quot;password&quot; binding:&quot;required&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  r<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/users/login&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> user User
    <span class="token keyword">var</span> user2 User
    <span class="token comment">// \u5C06 body \u4E2D\u7684\u6570\u636E\u89E3\u6790\u5230\u7ED3\u6784\u4F53\u5B9E\u4F8B\u4E0A</span>
    err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>
    c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user2<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span><span class="token boolean">nil</span> <span class="token punctuation">{</span>
      fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span>user2<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>ShouldBind \u65B9\u6CD5\u4E0D\u80FD\u591A\u6B21\u8C03\u7528\uFF0C\u53EA\u6709\u7B2C\u4E00\u6B21\u8C03\u7528\u624D\u80FD\u83B7\u53D6\u503C\uFF0C\u5982\u679C\u8981\u591A\u6B21\u83B7\u53D6\u503C\u5E94\u8BE5\u4F7F\u7528 <code>ShouldBindBodyWith</code> \u65B9\u6CD5\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>c<span class="token punctuation">.</span><span class="token function">ShouldBindBodyWith</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user2<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>JSON<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="url-\u6570\u636E\u89E3\u6790\u548C\u7ED1\u5B9A" tabindex="-1"><a class="header-anchor" href="#url-\u6570\u636E\u89E3\u6790\u548C\u7ED1\u5B9A" aria-hidden="true">#</a> URL \u6570\u636E\u89E3\u6790\u548C\u7ED1\u5B9A</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  r<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/users/login/:username/:password&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> user User
    <span class="token keyword">var</span> user2 User
    err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindUri</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>
    c<span class="token punctuation">.</span><span class="token function">ShouldBindUri</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user2<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
      fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> user2<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,7);function t(o,e){return p}var u=n(a,[["render",t]]);export{u as default};
