import{_ as e,r as o,o as c,c as l,a as n,d as t,F as u,b as s,e as a}from"./app.269ed0ef.js";var r="/grpc-and-protobuf/\u9879\u76EE\u6587\u4EF6\u7ED3\u6784.png";const i={},k=n("h1",{id:"grpc",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#grpc","aria-hidden":"true"},"#"),s(" gRPC")],-1),b={class:"custom-container tip"},m=a('<p class="custom-container-title">TIP</p><p>\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u547D\u4EE4\u751F\u6210\u6869\u6587\u4EF6\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>docker run --rm --name protoc --mount <span class="token assign-left variable">type</span><span class="token operator">=</span>bind,source<span class="token operator">=</span><span class="token variable">${your protofile abs path}</span>,target<span class="token operator">=</span>/app/proto ppg007/protoc-gen:latest /sbin/my_init -- <span class="token function">ls</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u6B64\u79CD\u65B9\u5F0F\u4E0B\uFF0Cproto \u6E90\u6587\u4EF6\u5939\u5FC5\u987B\u662F\u7EDD\u5BF9\u8DEF\u5F84\uFF0C\u4E14\u6700\u591A\u5141\u8BB8\u4E24\u5C42\u5D4C\u5957\uFF0C\u4F8B\uFF1A\u5982\u679C\u8F93\u5165\u7684\u6E90\u8DEF\u5F84\u4E3A /home/user/proto\uFF0C\u90A3\u4E48 proto \u6587\u4EF6\u5939\u4E2D\u53EF\u4EE5\u76F4\u63A5\u5B58\u653E proto \u6587\u4EF6\uFF0C\u4E5F\u53EF\u4EE5\u5728 proto \u6587\u4EF6\u5939\u4E2D\u521B\u5EFA\u591A\u4E2A\u5B50\u76EE\u5F55\u5B58\u653E proto \u6587\u4EF6\u3002</p><p>\u5982\u679C\u4F7F\u7528\u7684 grpc-gateway \u662F\u4F7F\u7528 yaml \u683C\u5F0F\u63CF\u8FF0\u7684\uFF0C\u8FD9\u4E2A yaml \u6587\u4EF6\u540D\u5FC5\u987B\u662F <code>service.yml</code>\u3002</p>',5),d=s("\u6B64\u955C\u50CF\u8BE6\u7EC6\u4FE1\u606F\u89C1\uFF1A"),g={href:"https://github.com/PPG007/protoc-gen",target:"_blank",rel:"noopener noreferrer"},f=s("protoc-gen"),v=a(`<h2 id="\u5F15\u5165-grpc" tabindex="-1"><a class="header-anchor" href="#\u5F15\u5165-grpc" aria-hidden="true">#</a> \u5F15\u5165 gRPC</h2><p><code>go get google.golang.org/grpc</code>\u3002</p><h2 id="\u4E00\u5143-rpc" tabindex="-1"><a class="header-anchor" href="#\u4E00\u5143-rpc" aria-hidden="true">#</a> \u4E00\u5143 RPC</h2><p>\u5728 proto \u6587\u4EF6\u7F16\u8BD1\u540E\u751F\u6210\u7684\u4EE3\u7801\u4E2D\u53EF\u4EE5\u627E\u5230 proto \u4E2D service \u5173\u952E\u5B57\u5B9A\u4E49\u7684\u63A5\u53E3 interface\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> LaptopServiceServer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">CreateLaptop</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> <span class="token operator">*</span>CreateLaptopRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>CreateLaptopResponse<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">mustEmbedUnimplementedLaptopServiceServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5728\u751F\u6210\u7684\u63A5\u53E3\u4E2D\u5B58\u5728\u4E00\u4E2A\u5BF9\u5305\u5916\u4E0D\u53EF\u89C1\u7684\u65B9\u6CD5\uFF0C\u540C\u65F6\u8FD9\u4E2A\u751F\u6210\u7684\u6587\u4EF6\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7ED3\u6784\u4F53 <code>UnimplementedLaptopServiceServer</code> \u5B9E\u73B0\u4E86\u8FD9\u4E2A\u63A5\u53E3\u7684\u6240\u6709\u65B9\u6CD5\uFF0C\u5982\u679C\u6211\u4EEC\u8981\u5728\u5176\u4ED6\u5305\u4E2D\u5B9E\u73B0\u8FD9\u4E2A\u63A5\u53E3\uFF0C\u5C31\u5FC5\u987B\u5728\u5305\u5916\u7684\u7ED3\u6784\u4F53\u4E2D\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> LaptopServer <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u81EA\u5B9A\u4E49\u7684\u63A5\u53E3\uFF0C\u7528\u6765\u4FDD\u5B58\u7B14\u8BB0\u672C\uFF0C\u8FD9\u91CC\u76F4\u63A5\u4FDD\u5B58\u5728\u4E00\u4E2A map \u4E2D\u3002</span>
	LaptopStore LaptopStore
  <span class="token comment">// \u81EA\u5B9A\u4E49\u7684\u63A5\u53E3\uFF0C\u7528\u6765\u4FDD\u5B58\u56FE\u7247\uFF0C\u8FD9\u91CC\u4FDD\u5B58\u5728\u7CFB\u7EDF\u4E2D\u6307\u5B9A\u7684\u8DEF\u5F84\u4E2D\u3002</span>
	ImageStore  ImageStore
  <span class="token comment">// \u533F\u540D\u5D4C\u5957</span>
	pb<span class="token punctuation">.</span>UnimplementedLaptopServiceServer
  <span class="token comment">// \u81EA\u5B9A\u4E49\u63A5\u53E3\uFF0C\u7528\u6765\u4FDD\u5B58\u7B14\u8BB0\u672C\u7684\u8BC4\u5206\uFF0C\u8FD9\u91CC\u76F4\u63A5\u5B58\u5728 map \u4E2D\u3002</span>
	RatingStore RatingStore
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5728\u4E0A\u9762\u7684\u7ED3\u6784\u4F53\u4E0A\u5B9E\u73B0\u8FD9\u4E2A\u63A5\u53E3\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>server <span class="token operator">*</span>LaptopServer<span class="token punctuation">)</span> <span class="token function">CreateLaptop</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token operator">*</span>pb<span class="token punctuation">.</span>CreateLaptopRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>pb<span class="token punctuation">.</span>CreateLaptopResponse<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u8BF7\u6C42\u4E2D\u7684 laptop \u5BF9\u8C61</span>
	laptop <span class="token operator">:=</span> req<span class="token punctuation">.</span><span class="token function">GetLaptop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;receive a create-laptop request with id: %s&quot;</span><span class="token punctuation">,</span> laptop<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>
  <span class="token comment">// \u5982\u679C\u4F20\u6765\u7684 laptop \u7684 id \u5927\u4E8E 0 \u5C31\u5BF9\u5176\u8FDB\u884C\u9A8C\u8BC1\u3002</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>laptop<span class="token punctuation">.</span>Id<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528 uuid \u89E3\u6790 id</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> uuid<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>laptop<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u51FA\u9519\u5C31\u76F4\u63A5\u8FD4\u56DE</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>InvalidArgument<span class="token punctuation">,</span> <span class="token string">&quot;laptop ID is not a valid UUID: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u53D1\u6765\u7684 laptop \u7684 id \u957F\u5EA6\u4E3A 0\uFF0C\u5C31\u751F\u6210\u4E00\u4E2A\u968F\u673A id \u8D4B\u503C\u7ED9\u8FD9\u4E2A laptop \u5BF9\u8C61\u3002</span>
		id<span class="token punctuation">,</span> err <span class="token operator">:=</span> uuid<span class="token punctuation">.</span><span class="token function">NewRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u51FA\u9519\u5C31\u8FD4\u56DE\u3002</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span> <span class="token string">&quot;cannot generate a new laptop ID: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		laptop<span class="token punctuation">.</span>Id <span class="token operator">=</span> id<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u5BA2\u6237\u7AEF\u7EC8\u6B62\u4E86\uFF08Ctrl + C\uFF09\u5C31\u76F4\u63A5\u8FD4\u56DE\u9519\u8BEF\u3002</span>
	<span class="token keyword">if</span> ctx<span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> context<span class="token punctuation">.</span>Canceled <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;request canceled&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Canceled<span class="token punctuation">,</span> <span class="token string">&quot;request canceled&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u5BA2\u6237\u7AEF\u8BBE\u7F6E\u4E86\u8D85\u65F6\u4E14\u5DF2\u7ECF\u8D85\u65F6\u4E5F\u8FD4\u56DE\u9519\u8BEF\u3002</span>
	<span class="token keyword">if</span> ctx<span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> context<span class="token punctuation">.</span>DeadlineExceeded <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;deadline exceeded&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>DeadlineExceeded<span class="token punctuation">,</span> <span class="token string">&quot;deadling exceeded&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u5C06\u8FD9\u4E2A laptop \u4FDD\u5B58\u8D77\u6765\u5E76\u5BF9\u9519\u8BEF\u8FDB\u884C\u5904\u7406\u3002</span>
	err <span class="token operator">:=</span> server<span class="token punctuation">.</span>LaptopStore<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>laptop<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		s<span class="token punctuation">,</span> ok <span class="token operator">:=</span> status<span class="token punctuation">.</span><span class="token function">FromError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span> <span class="token string">&quot;cannot save laptop to the store: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">Code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;cannot save laptop to the store: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>CreateLaptopResponse<span class="token punctuation">{</span>
		Id<span class="token punctuation">:</span> laptop<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><p>\u670D\u52A1\u7AEF\u542F\u52A8\u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	port <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;port&quot;</span><span class="token punctuation">,</span> <span class="token number">8080</span><span class="token punctuation">,</span> <span class="token string">&quot;the server port&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;start server on port %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>port<span class="token punctuation">)</span>
	laptopServer <span class="token operator">:=</span> service<span class="token punctuation">.</span><span class="token function">NewLaptopServer</span><span class="token punctuation">(</span>service<span class="token punctuation">.</span><span class="token function">NewInMemoryLaptopStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A grpc \u670D\u52A1\u5668\u3002</span>
	grpcServer <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// \u5411\u8FD9\u4E2A grpc \u670D\u52A1\u5668\u6CE8\u518C\u4E00\u4E2A\u670D\u52A1\u3002</span>
	pb<span class="token punctuation">.</span><span class="token function">RegisterLaptopServiceServer</span><span class="token punctuation">(</span>grpcServer<span class="token punctuation">,</span> laptopServer<span class="token punctuation">)</span>
	address <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;0.0.0.0:%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>port<span class="token punctuation">)</span>
  <span class="token comment">// \u5B9A\u4E49\u76D1\u542C\u3002</span>
	listener<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> address<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;cannot start server: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u542F\u52A8 grpc \u670D\u52A1\u5668\u3002</span>
	err <span class="token operator">=</span> grpcServer<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;cannot start server: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u5BA2\u6237\u7AEF\u542F\u52A8\u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	serverAddress <span class="token operator">:=</span> flag<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;address&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;the server address&quot;</span><span class="token punctuation">)</span>
	flag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;dial server %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>serverAddress<span class="token punctuation">)</span>
  <span class="token comment">// \u4E0D\u4F7F\u7528 TLS \u8FDB\u884C\u8FDE\u63A5\u3002</span>
	conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token operator">*</span>serverAddress<span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithInsecure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;cannot dial server: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u8C03\u7528\u751F\u6210\u7684\u65B9\u6CD5\u751F\u6210\u6307\u5B9A\u670D\u52A1\u7684\u5BA2\u6237\u7AEF\u3002</span>
	laptopClient <span class="token operator">:=</span> pb<span class="token punctuation">.</span><span class="token function">NewLaptopServiceClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A laptop \u5BF9\u8C61\u3002</span>
	laptop <span class="token operator">:=</span> sample<span class="token punctuation">.</span><span class="token function">NewLaptop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6784\u5EFA\u4E00\u4E2A\u8BF7\u6C42\u5BF9\u8C61\u3002</span>
	req <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>CreateLaptopRequest<span class="token punctuation">{</span>
		Laptop<span class="token punctuation">:</span> laptop<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u8BBE\u7F6E\u8D85\u65F6\u65F6\u95F4\u3002</span>
	ctx<span class="token punctuation">,</span> cancelFunction <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithTimeout</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>Second <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span>
	<span class="token keyword">defer</span> <span class="token function">cancelFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// \u901A\u8FC7 client \u8C03\u7528\u65B9\u6CD5</span>
	res<span class="token punctuation">,</span> err <span class="token operator">:=</span> laptopClient<span class="token punctuation">.</span><span class="token function">CreateLaptop</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> req<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span><span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;call createLaptop error: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;created laptop with id: %s\\n&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="\u670D\u52A1\u7AEF\u6D41\u5F0F-rpc" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u7AEF\u6D41\u5F0F-rpc" aria-hidden="true">#</a> \u670D\u52A1\u7AEF\u6D41\u5F0F RPC</h2><p>\u751F\u6210\u7684\u63A5\u53E3\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> LaptopServiceServer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">CreateLaptop</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> <span class="token operator">*</span>CreateLaptopRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>CreateLaptopResponse<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">SearchLaptop</span><span class="token punctuation">(</span><span class="token operator">*</span>SearchLaptopRequest<span class="token punctuation">,</span> LaptopService_SearchLaptopServer<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">mustEmbedUnimplementedLaptopServiceServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5B9E\u73B0\u8FD9\u4E2A\u63A5\u53E3\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>server <span class="token operator">*</span>LaptopServer<span class="token punctuation">)</span> <span class="token function">SearchLaptop</span><span class="token punctuation">(</span>request <span class="token operator">*</span>pb<span class="token punctuation">.</span>SearchLaptopRequest<span class="token punctuation">,</span> stream pb<span class="token punctuation">.</span>LaptopService_SearchLaptopServer<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u53D1\u9001\u7684 filter \u5BF9\u8C61\u3002</span>
	filter <span class="token operator">:=</span> request<span class="token punctuation">.</span><span class="token function">GetFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;receive a search-laptop request with filter: %v&quot;</span><span class="token punctuation">,</span> filter<span class="token punctuation">)</span>
  <span class="token comment">// \u5411\u81EA\u5B9A\u4E49\u65B9\u6CD5\u4F20\u5165\u53C2\u6570\uFF0Ccontext \u7528\u6765\u8FDB\u884C\u53D6\u6D88\u548C\u8D85\u65F6\u5904\u7406\uFF0Cfilter \u7528\u6765\u7B5B\u9009\uFF0C\u4F20\u5165\u51FD\u6570\u7528\u6765\u4EE5\u6D41\u5F62\u5F0F\u56DE\u590D\u5BA2\u6237\u7AEF\uFF0C\u8FD9\u4E2A\u81EA\u5B9A\u4E49\u65B9\u6CD5\u5FAA\u73AF\u904D\u5386 map \u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\uFF0C\u6BCF\u9047\u5230\u4E00\u4E2A\u7B26\u5408 filter \u8981\u6C42\u7684\u5C31\u8C03\u7528\u8FD9\u4E2A\u4F20\u5165\u7684\u51FD\u6570\u53D1\u56DE\u5BA2\u6237\u7AEF</span>
	err <span class="token operator">:=</span> server<span class="token punctuation">.</span>LaptopStore<span class="token punctuation">.</span><span class="token function">Search</span><span class="token punctuation">(</span>stream<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> filter<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>laptop <span class="token operator">*</span>pb<span class="token punctuation">.</span>Laptop<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		res <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>SearchLaptopResponse<span class="token punctuation">{</span>Laptop<span class="token punctuation">:</span> laptop<span class="token punctuation">}</span>
    <span class="token comment">// \u6D41\u8C03\u7528 Send \u65B9\u6CD5\u53D1\u9001\u3002</span>
		err <span class="token operator">:=</span> stream<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> err
		<span class="token punctuation">}</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;sent laptop with id: %s&quot;</span><span class="token punctuation">,</span> laptop<span class="token punctuation">.</span><span class="token function">GetId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span> <span class="token string">&quot;unexpected error: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u5BA2\u6237\u7AEF\u8C03\u7528\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">searchLaptop</span><span class="token punctuation">(</span>laptopClient pb<span class="token punctuation">.</span>LaptopServiceClient<span class="token punctuation">,</span> filter <span class="token operator">*</span>pb<span class="token punctuation">.</span>Filter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;search filter&quot;</span><span class="token punctuation">,</span> filter<span class="token punctuation">)</span>
	ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithTimeout</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
	<span class="token keyword">defer</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	req <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>SearchLaptopRequest<span class="token punctuation">{</span>
		Filter<span class="token punctuation">:</span> filter<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	stream<span class="token punctuation">,</span> err <span class="token operator">:=</span> laptopClient<span class="token punctuation">.</span><span class="token function">SearchLaptop</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> req<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;cannot search laptop: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		res<span class="token punctuation">,</span> err <span class="token operator">:=</span> stream<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;cannot receive response: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		laptop <span class="token operator">:=</span> res<span class="token punctuation">.</span><span class="token function">GetLaptop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;- found laptop with id: %s&quot;</span><span class="token punctuation">,</span> laptop<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot; + found laptop with price_usd: %f&quot;</span><span class="token punctuation">,</span> laptop<span class="token punctuation">.</span>PriceUsd<span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot; + found laptop with cpu_cores: %d&quot;</span><span class="token punctuation">,</span> laptop<span class="token punctuation">.</span>Cpu<span class="token punctuation">.</span>NumberCores<span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot; + found laptop with ram: %d %v&quot;</span><span class="token punctuation">,</span> laptop<span class="token punctuation">.</span>Ram<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> laptop<span class="token punctuation">.</span>Ram<span class="token punctuation">.</span>Unit<span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot; + found laptop with min cpu_ghz: %f&quot;</span><span class="token punctuation">,</span> laptop<span class="token punctuation">.</span>Cpu<span class="token punctuation">.</span>MinGhz<span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot; + found laptop with max cpu_ghz: %f&quot;</span><span class="token punctuation">,</span> laptop<span class="token punctuation">.</span>Cpu<span class="token punctuation">.</span>MaxGhz<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u670D\u52A1\u7AEF\u3001\u5BA2\u6237\u7AEF\u542F\u52A8\u51FD\u6570\u4E0D\u9700\u8981\u53D8\u5316\u3002</p><h2 id="\u5BA2\u6237\u7AEF\u6D41\u5F0F-rpc" tabindex="-1"><a class="header-anchor" href="#\u5BA2\u6237\u7AEF\u6D41\u5F0F-rpc" aria-hidden="true">#</a> \u5BA2\u6237\u7AEF\u6D41\u5F0F RPC</h2><p>\u751F\u6210\u7684\u63A5\u53E3\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> LaptopServiceServer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">CreateLaptop</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> <span class="token operator">*</span>CreateLaptopRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>CreateLaptopResponse<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">SearchLaptop</span><span class="token punctuation">(</span><span class="token operator">*</span>SearchLaptopRequest<span class="token punctuation">,</span> LaptopService_SearchLaptopServer<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">UploadImage</span><span class="token punctuation">(</span>LaptopService_UploadImageServer<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">mustEmbedUnimplementedLaptopServiceServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5B9E\u73B0\u8FD9\u4E2A\u63A5\u53E3\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>server <span class="token operator">*</span>LaptopServer<span class="token punctuation">)</span> <span class="token function">UploadImage</span><span class="token punctuation">(</span>stream pb<span class="token punctuation">.</span>LaptopService_UploadImageServer<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8C03\u7528 Recv() \u65B9\u6CD5\u83B7\u53D6\u5BA2\u6237\u7AEF\u53D1\u6765\u7684\u8BF7\u6C42\uFF0C\u6B64\u8BF7\u6C42\u5305\u542B oneof</span>
	req<span class="token punctuation">,</span> err <span class="token operator">:=</span> stream<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Unknown<span class="token punctuation">,</span> <span class="token string">&quot;cannot receive image info&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u63A5\u6536\u7B2C\u4E00\u8F6E\u8BF7\u6C42\uFF0C\u8FD9\u4E00\u8F6E\u8BF7\u6C42\u5305\u542B laptop \u7684 ID \u548C\u56FE\u7247\u7684\u7C7B\u578B\uFF0C\u540E\u7EED\u8BF7\u6C42\u53EA\u6709\u4E8C\u8FDB\u5236\u6570\u7EC4\u3002</span>
	laptopID <span class="token operator">:=</span> req<span class="token punctuation">.</span><span class="token function">GetInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetLaptopId</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	imageType <span class="token operator">:=</span> req<span class="token punctuation">.</span><span class="token function">GetInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetImageType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;receive an upload-image request for laptop %s with image type %s&quot;</span><span class="token punctuation">,</span> laptopID<span class="token punctuation">,</span> imageType<span class="token punctuation">)</span>
	laptop<span class="token punctuation">,</span> err <span class="token operator">:=</span> server<span class="token punctuation">.</span>LaptopStore<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span>laptopID<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span> <span class="token string">&quot;cannot find laptop: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> laptop <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>NotFound<span class="token punctuation">,</span> <span class="token string">&quot;laptop with ID: %s dosen&#39;t exist&quot;</span><span class="token punctuation">,</span> laptopID<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u521B\u5EFA\u7F13\u51B2\u533A\u3002</span>
	imageData <span class="token operator">:=</span> bytes<span class="token punctuation">.</span>Buffer<span class="token punctuation">{</span><span class="token punctuation">}</span>
	imageSize <span class="token operator">:=</span> <span class="token number">0</span>
  <span class="token comment">// \u6D41\u5F0F\u8BF7\u6C42\u8981\u5FAA\u73AF\u63A5\u6536\u3002</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;waiting to receive more data&quot;</span><span class="token punctuation">)</span>
		req<span class="token punctuation">,</span> err <span class="token operator">:=</span> stream<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u5230\u8FBE\u6D41\u7684\u672B\u5C3E\u3002</span>
		<span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;no more data&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Unknown<span class="token punctuation">,</span> <span class="token string">&quot;cannot receive chunk data: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		chunk <span class="token operator">:=</span> req<span class="token punctuation">.</span><span class="token function">GetChunkData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		size <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;receive data with size:&quot;</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span>
		imageSize <span class="token operator">+=</span> size
    <span class="token comment">// \u9650\u5236\u5927\u5C0F\u3002</span>
		<span class="token keyword">if</span> imageSize <span class="token operator">&gt;</span> maxImageSize <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>InvalidArgument<span class="token punctuation">,</span> <span class="token string">&quot;image is too large: %d &gt; %d\\n&quot;</span><span class="token punctuation">,</span> imageSize<span class="token punctuation">,</span> maxImageSize<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
    <span class="token comment">// \u5199\u5165\u7F13\u51B2\u533A\u3002</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> imageData<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span> <span class="token string">&quot;cannot write chunk data: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	imageID<span class="token punctuation">,</span> err <span class="token operator">:=</span> server<span class="token punctuation">.</span>ImageStore<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>laptopID<span class="token punctuation">,</span> imageType<span class="token punctuation">,</span> imageData<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span> <span class="token string">&quot;cannot save image to the store: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	res <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>UploadImageResponse<span class="token punctuation">{</span>
		Id<span class="token punctuation">:</span>   imageID<span class="token punctuation">,</span>
		Size<span class="token punctuation">:</span> <span class="token function">uint32</span><span class="token punctuation">(</span>imageSize<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u53D1\u9001\u5E76\u5173\u95ED\u6D41\uFF0C\u5C06\u76F8\u5E94\u53D1\u9001\u56DE\u5BA2\u6237\u7AEF\u3002</span>
	err <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">SendAndClose</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Unknown<span class="token punctuation">,</span> <span class="token string">&quot;cannot send response: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;save image with id: %s, size: %d successfully\\n&quot;</span><span class="token punctuation">,</span> imageID<span class="token punctuation">,</span> imageSize<span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><p>\u5BA2\u6237\u7AEF\u8C03\u7528\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">uploadImage</span><span class="token punctuation">(</span>laptopClient pb<span class="token punctuation">.</span>LaptopServiceClient<span class="token punctuation">,</span> laptopID<span class="token punctuation">,</span> imagePath <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	file<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;cannot open image file:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> file<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithTimeout</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>Second<span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span>
	<span class="token keyword">defer</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	stream<span class="token punctuation">,</span> err <span class="token operator">:=</span> laptopClient<span class="token punctuation">.</span><span class="token function">UploadImage</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;cannot upload image: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	req <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>UploadImageRequest<span class="token punctuation">{</span>
		Data<span class="token punctuation">:</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>UploadImageRequest_Info<span class="token punctuation">{</span>
			Info<span class="token punctuation">:</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>ImageInfo<span class="token punctuation">{</span>
				LaptopId<span class="token punctuation">:</span>  laptopID<span class="token punctuation">,</span>
				ImageType<span class="token punctuation">:</span> filepath<span class="token punctuation">.</span><span class="token function">Ext</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	err <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;cannot send image info:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	reader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
	buffer <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		n<span class="token punctuation">,</span> err <span class="token operator">:=</span> reader<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;cannot read chunk to buffer:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		req <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>UploadImageRequest<span class="token punctuation">{</span>
			Data<span class="token punctuation">:</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>UploadImageRequest_ChunkData<span class="token punctuation">{</span>
				ChunkData<span class="token punctuation">:</span> buffer<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span>

		err <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u83B7\u53D6\u5B9E\u9645\u9519\u8BEF</span>
			err2 <span class="token operator">:=</span> stream<span class="token punctuation">.</span><span class="token function">RecvMsg</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span>
			log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;cannot send chunk to server:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">,</span> err2<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	res<span class="token punctuation">,</span> err <span class="token operator">:=</span> stream<span class="token punctuation">.</span><span class="token function">CloseAndRecv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;cannot receive response:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;upload image with ID: %s and size: %d&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> res<span class="token punctuation">.</span>Size<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><p>\u670D\u52A1\u7AEF\u3001\u5BA2\u6237\u7AEF\u542F\u52A8\u51FD\u6570\u65E0\u53D8\u5316\u3002</p><h2 id="\u53CC\u5411\u6D41\u5F0F-rpc" tabindex="-1"><a class="header-anchor" href="#\u53CC\u5411\u6D41\u5F0F-rpc" aria-hidden="true">#</a> \u53CC\u5411\u6D41\u5F0F RPC</h2><p>\u751F\u6210\u7684\u63A5\u53E3\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> LaptopServiceServer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">CreateLaptop</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> <span class="token operator">*</span>CreateLaptopRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>CreateLaptopResponse<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">SearchLaptop</span><span class="token punctuation">(</span><span class="token operator">*</span>SearchLaptopRequest<span class="token punctuation">,</span> LaptopService_SearchLaptopServer<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">UploadImage</span><span class="token punctuation">(</span>LaptopService_UploadImageServer<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">RateLaptop</span><span class="token punctuation">(</span>LaptopService_RateLaptopServer<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">mustEmbedUnimplementedLaptopServiceServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5B9E\u73B0\u8FD9\u4E2A\u63A5\u53E3\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>server <span class="token operator">*</span>LaptopServer<span class="token punctuation">)</span> <span class="token function">RateLaptop</span><span class="token punctuation">(</span>stream pb<span class="token punctuation">.</span>LaptopService_RateLaptopServer<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6 context \u9519\u8BEF\u5E76\u8FDB\u884C\u8D85\u65F6\u548C\u53D6\u6D88\u5224\u65AD\u3002</span>
		err <span class="token operator">:=</span> stream<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">==</span> context<span class="token punctuation">.</span>Canceled <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Canceled<span class="token punctuation">,</span> <span class="token string">&quot;request canceled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> err <span class="token operator">==</span> context<span class="token punctuation">.</span>DeadlineExceeded <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>DeadlineExceeded<span class="token punctuation">,</span> <span class="token string">&quot;deadline exceeded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Unknown<span class="token punctuation">,</span> <span class="token string">&quot;unknown error: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
    <span class="token comment">// \u63A5\u6536\u5BA2\u6237\u7AEF\u53D1\u6765\u7684\u8BF7\u6C42\u3002</span>
		req<span class="token punctuation">,</span> err <span class="token operator">:=</span> stream<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u5230\u8FBE\u6D41\u7684\u672B\u5C3E\u5C31\u9000\u51FA\u5FAA\u73AF\u3002</span>
		<span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;no more data&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Unknown<span class="token punctuation">,</span> <span class="token string">&quot;cannot receive stream request: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		laptopID <span class="token operator">:=</span> req<span class="token punctuation">.</span><span class="token function">GetLaptopId</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		score <span class="token operator">:=</span> req<span class="token punctuation">.</span><span class="token function">GetScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;receive a rate-laptop request with laptopID: %s and score: %f\\n&quot;</span><span class="token punctuation">,</span> laptopID<span class="token punctuation">,</span> score<span class="token punctuation">)</span>
		laptop<span class="token punctuation">,</span> err <span class="token operator">:=</span> server<span class="token punctuation">.</span>LaptopStore<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span>laptopID<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> laptop <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>NotFound<span class="token punctuation">,</span> <span class="token string">&quot;cannot find laptop with ID: %s&quot;</span><span class="token punctuation">,</span> laptopID<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		rating<span class="token punctuation">,</span> err <span class="token operator">:=</span> server<span class="token punctuation">.</span>RatingStore<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>laptopID<span class="token punctuation">,</span> score<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span> <span class="token string">&quot;cannot add rating: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		res <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>RateLaptopResponse<span class="token punctuation">{</span>
			LaptopId<span class="token punctuation">:</span>     laptopID<span class="token punctuation">,</span>
			RatedCount<span class="token punctuation">:</span>   rating<span class="token punctuation">.</span>Count<span class="token punctuation">,</span>
			AverageScore<span class="token punctuation">:</span> rating<span class="token punctuation">.</span>Sum <span class="token operator">/</span> <span class="token function">float64</span><span class="token punctuation">(</span>rating<span class="token punctuation">.</span>Count<span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span>
    <span class="token comment">// \u6BCF\u8F6E\u8BF7\u6C42\u90FD\u6709\u8FD4\u56DE\u503C\u6240\u4EE5\u76F4\u63A5 Send</span>
		err <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">logErr</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Unknown<span class="token punctuation">,</span> <span class="token string">&quot;cannot send response: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><p>\u5BA2\u6237\u7AEF\u8C03\u7528\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">rateLaptop</span><span class="token punctuation">(</span>laptopID <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> score <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">,</span> laptopClient pb<span class="token punctuation">.</span>LaptopServiceClient<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>laptopID<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token function">len</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;laptopID&#39;s num dosen&#39;t eqal to the score&#39;s num&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithTimeout</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>Second<span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span>
	<span class="token keyword">defer</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	stream<span class="token punctuation">,</span> err <span class="token operator">:=</span> laptopClient<span class="token punctuation">.</span><span class="token function">RateLaptop</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;cannot rate laptop: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	waitResponse <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">{</span>
			res<span class="token punctuation">,</span> err <span class="token operator">:=</span> stream<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
				log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;no more response&quot;</span><span class="token punctuation">)</span>
				waitResponse <span class="token operator">&lt;-</span> <span class="token boolean">nil</span>
				<span class="token keyword">return</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				waitResponse <span class="token operator">&lt;-</span> err
				<span class="token keyword">return</span>
			<span class="token punctuation">}</span>
			log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;receive response: %v\\n&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> laptopID <span class="token operator">:=</span> <span class="token keyword">range</span> laptopID <span class="token punctuation">{</span>
		req <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>RateLaptopRequest<span class="token punctuation">{</span>
			LaptopId<span class="token punctuation">:</span> laptopID<span class="token punctuation">,</span>
			Score<span class="token punctuation">:</span>    score<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span>
		err <span class="token operator">:=</span> stream<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;cannot send stream request: %v - %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">,</span> stream<span class="token punctuation">.</span><span class="token function">RecvMsg</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;send request: %v\\n&quot;</span><span class="token punctuation">,</span> req<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	err <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">CloseSend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;cannot close send: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	err <span class="token operator">=</span> <span class="token operator">&lt;-</span>waitResponse
	<span class="token keyword">return</span> err
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><p>\u5BA2\u6237\u7AEF\u3001\u670D\u52A1\u7AEF\u542F\u52A8\u51FD\u6570\u6CA1\u6709\u53D8\u5316\u3002</p><h2 id="metadata\u3001interceptor\u3001jwt" tabindex="-1"><a class="header-anchor" href="#metadata\u3001interceptor\u3001jwt" aria-hidden="true">#</a> metadata\u3001interceptor\u3001JWT</h2><p>\u8BBE\u8BA1\u601D\u60F3\uFF1A\u8BBE\u8BA1\u4E00\u4E2A\u767B\u5F55\u63A5\u53E3\uFF0C\u767B\u5F55\u6210\u529F\u540E\u8FD4\u56DE token\uFF0C\u5BA2\u6237\u7AEF\u4F7F\u7528\u62E6\u622A\u5668\u5728\u51FA\u7AD9\u8BF7\u6C42\u7684 metadata \u4E2D\u6DFB\u52A0 token\uFF0C\u670D\u52A1\u7AEF\u901A\u8FC7\u62E6\u622A\u5668\u5224\u65AD\u662F\u5426\u9700\u8981\u62E6\u622A\u6216\u8005\u9700\u8981\u7684\u89D2\u8272\uFF0C\u5E76\u5BF9 token \u8FDB\u884C\u5408\u6CD5\u6821\u9A8C\u548C\u6743\u9650\u5224\u65AD\u3002</p><p>\u751F\u6210\u7684\u63A5\u53E3\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> AuthServiceServer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">Login</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> <span class="token operator">*</span>LoginRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>LoginResponse<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
  <span class="token comment">// \u540C\u6837\u9700\u8981\u5D4C\u5957\u3002</span>
	<span class="token function">mustEmbedUnimplementedAuthServiceServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5B9E\u73B0\u8FD9\u4E2A\u63A5\u53E3\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> AuthServer <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	userStore  UserStore
	jwtManager JWTManager
	pb<span class="token punctuation">.</span>UnimplementedAuthServiceServer
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>authServer <span class="token operator">*</span>AuthServer<span class="token punctuation">)</span> <span class="token function">Login</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token operator">*</span>pb<span class="token punctuation">.</span>LoginRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>pb<span class="token punctuation">.</span>LoginResponse<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	user<span class="token punctuation">,</span> err <span class="token operator">:=</span> authServer<span class="token punctuation">.</span>userStore<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>Username<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
  <span class="token comment">// \u6B64\u5904\u662F\u5C06\u4F20\u6765\u7684\u5BC6\u7801\u8FDB\u884C hash\uFF0C\u4E0E\u6B63\u786E\u5BC6\u7801\u7684 hash \u6BD4\u8F83\u5F97\u51FA\u3002</span>
	<span class="token keyword">if</span> <span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">IsCorrectPassword</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>Password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>NotFound<span class="token punctuation">,</span> <span class="token string">&quot;incorrect password&quot;</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>Username<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u4FE1\u606F\u6B63\u786E\u5C31\u8FD4\u56DE\u3002</span>
	token<span class="token punctuation">,</span> err <span class="token operator">:=</span> authServer<span class="token punctuation">.</span>jwtManager<span class="token punctuation">.</span><span class="token function">GenerateToken</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span> <span class="token string">&quot;cannot generate token&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>LoginResponse<span class="token punctuation">{</span>
		AccessToken<span class="token punctuation">:</span> token<span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>grpc/server.go \u4E2D\u5B9A\u4E49\u4E86\u4E24\u4E2A\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">UnaryInterceptor</span><span class="token punctuation">(</span>i UnaryServerInterceptor<span class="token punctuation">)</span> ServerOption
<span class="token keyword">func</span> <span class="token function">StreamInterceptor</span><span class="token punctuation">(</span>i StreamServerInterceptor<span class="token punctuation">)</span> ServerOption
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u4E3A ServerOption \u7C7B\u578B\uFF0C\u5C06\u8FD9\u4E2A\u7C7B\u578B\u5BF9\u8C61\u4F20\u5165 gRPC server \u6784\u9020\u65B9\u6CD5\u4E2D\u53EF\u4EE5\u5B9E\u73B0\u6DFB\u52A0\u62E6\u622A\u5668\uFF0C\u8FD9\u4E24\u4E2A\u51FD\u6570\u7684\u53C2\u6570\u5B9A\u4E49\u5728 grpc/interceptor.go \u4E2D\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> UnaryServerInterceptor <span class="token keyword">func</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> info <span class="token operator">*</span>UnaryServerInfo<span class="token punctuation">,</span> handler UnaryHandler<span class="token punctuation">)</span> <span class="token punctuation">(</span>resp <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>
<span class="token keyword">type</span> StreamServerInterceptor <span class="token keyword">func</span><span class="token punctuation">(</span>srv <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> ss ServerStream<span class="token punctuation">,</span> info <span class="token operator">*</span>StreamServerInfo<span class="token punctuation">,</span> handler StreamHandler<span class="token punctuation">)</span> <span class="token builtin">error</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u56E0\u6B64\uFF0C\u81EA\u5B9A\u4E49\u62E6\u622A\u5668\u53EA\u8981\u5206\u522B\u5B9A\u4E49\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u5206\u522B\u8FD4\u56DE\u8FD9\u4E24\u79CD\u7C7B\u578B\u7684\u8FD4\u56DE\u503C\uFF0C\u518D\u5C06\u8FD9\u4E2A\u8FD4\u56DE\u503C\u4F20\u5165 gRPC server \u6784\u9020\u51FD\u6570\u4E2D\u5373\u53EF\u3002</p><p>\u5B9E\u73B0\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> AuthInterceptor <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	jwtManager      <span class="token operator">*</span>JWTManager
	accessibleRoles <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token comment">// \u952E\u4E3A\u65B9\u6CD5\u540D\uFF0C\u503C\u4E3A\u5141\u8BB8\u8BBF\u95EE\u7684\u89D2\u8272\u5217\u8868\u3002</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>interceptor <span class="token operator">*</span>AuthInterceptor<span class="token punctuation">)</span> <span class="token function">Unary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> grpc<span class="token punctuation">.</span>UnaryServerInterceptor <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> info <span class="token operator">*</span>grpc<span class="token punctuation">.</span>UnaryServerInfo<span class="token punctuation">,</span> handler grpc<span class="token punctuation">.</span>UnaryHandler<span class="token punctuation">)</span> <span class="token punctuation">(</span>resp <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;--&gt; unary interceptor:&quot;</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>FullMethod<span class="token punctuation">)</span>
		err <span class="token operator">=</span> interceptor<span class="token punctuation">.</span><span class="token function">authorize</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> info<span class="token punctuation">.</span>FullMethod<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token function">handler</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> req<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>interceptor <span class="token operator">*</span>AuthInterceptor<span class="token punctuation">)</span> <span class="token function">Stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> grpc<span class="token punctuation">.</span>StreamServerInterceptor <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>srv <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> ss grpc<span class="token punctuation">.</span>ServerStream<span class="token punctuation">,</span> info <span class="token operator">*</span>grpc<span class="token punctuation">.</span>StreamServerInfo<span class="token punctuation">,</span> handler grpc<span class="token punctuation">.</span>StreamHandler<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;--&gt; stream interceptor:&quot;</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>FullMethod<span class="token punctuation">)</span>
		err <span class="token operator">:=</span> interceptor<span class="token punctuation">.</span><span class="token function">authorize</span><span class="token punctuation">(</span>ss<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>FullMethod<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> err
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token function">handler</span><span class="token punctuation">(</span>srv<span class="token punctuation">,</span> ss<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>interceptor <span class="token operator">*</span>AuthInterceptor<span class="token punctuation">)</span> <span class="token function">authorize</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> fullMethod <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	accessibleRoles <span class="token operator">:=</span> interceptor<span class="token punctuation">.</span>accessibleRoles<span class="token punctuation">[</span>fullMethod<span class="token punctuation">]</span>
  <span class="token comment">// \u5982\u679C\u6CA1\u6709\u53EF\u4EE5\u8BBF\u95EE\u7684\u89D2\u8272\u5217\u8868\uFF0C\u90A3\u4E48\u5C31\u662F\u4E0D\u8BBE\u9650\u5236\u3002</span>
	<span class="token keyword">if</span> accessibleRoles <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u4ECE context \u4E2D\u83B7\u53D6 metadata map[string][]string</span>
	md<span class="token punctuation">,</span> ok <span class="token operator">:=</span> metadata<span class="token punctuation">.</span><span class="token function">FromIncomingContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
		<span class="token keyword">return</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>DataLoss<span class="token punctuation">,</span> <span class="token string">&quot;need metadata&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u7528\u7EA6\u5B9A\u597D\u7684\u952E\u53D6\u51FA\u503C\u3002</span>
	values <span class="token operator">:=</span> md<span class="token punctuation">[</span><span class="token string">&quot;authorization&quot;</span><span class="token punctuation">]</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>DataLoss<span class="token punctuation">,</span> <span class="token string">&quot;need authorization token&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u7EA6\u5B9A\u6570\u7EC4\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\u5C31\u662F token\u3002</span>
	accessToken <span class="token operator">:=</span> values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token comment">// \u9A8C\u8BC1 token\u3002</span>
	claims<span class="token punctuation">,</span> err <span class="token operator">:=</span> interceptor<span class="token punctuation">.</span>jwtManager<span class="token punctuation">.</span><span class="token function">Verify</span><span class="token punctuation">(</span>accessToken<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>InvalidArgument<span class="token punctuation">,</span> <span class="token string">&quot;access token is invalid: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token function">contains</span><span class="token punctuation">(</span>accessibleRoles<span class="token punctuation">,</span> claims<span class="token punctuation">.</span>Role<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>PermissionDenied<span class="token punctuation">,</span> <span class="token string">&quot;no permission to call %s&quot;</span><span class="token punctuation">,</span> fullMethod<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><p>\u670D\u52A1\u7AEF\u542F\u52A8\u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>grpcServer <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span>
  grpc<span class="token punctuation">.</span><span class="token function">UnaryInterceptor</span><span class="token punctuation">(</span>authInterceptor<span class="token punctuation">.</span><span class="token function">Unary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  grpc<span class="token punctuation">.</span><span class="token function">StreamInterceptor</span><span class="token punctuation">(</span>authInterceptor<span class="token punctuation">.</span><span class="token function">Stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5B9A\u4E49\u5BA2\u6237\u7AEF\u62E6\u622A\u5668\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> AuthInterceptor <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	authClient  <span class="token operator">*</span>AuthClient <span class="token comment">// \u53E6\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7ED3\u6784\u4F53\uFF0C\u7528\u6765\u901A\u8FC7\u7528\u6237\u540D\u5BC6\u7801\u83B7\u53D6 access token\u3002</span>
	authMethods <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">bool</span> <span class="token comment">// \u952E\u4E3A\u65B9\u6CD5\u540D\uFF0C\u503C\u4E3A\u5E03\u5C14\uFF0C\u8868\u793A\u662F\u5426\u9700\u8981 token\u3002</span>
	accessToken <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD9\u91CC\u4E24\u4E2A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4E5F\u662F\u51FD\u6570\uFF0C\u51FD\u6570\u7B7E\u540D\u4E0E\u670D\u52A1\u7AEF\u62E6\u622A\u5668\u5728\u540C\u4E00\u4E2A\u6587\u4EF6\uFF1Agrpc/interceptor.go \u4E2D\u3002</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>authInterceptor <span class="token operator">*</span>AuthInterceptor<span class="token punctuation">)</span> <span class="token function">Unary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> grpc<span class="token punctuation">.</span>UnaryClientInterceptor <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> method <span class="token builtin">string</span><span class="token punctuation">,</span> req<span class="token punctuation">,</span> reply <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> cc <span class="token operator">*</span>grpc<span class="token punctuation">.</span>ClientConn<span class="token punctuation">,</span> invoker grpc<span class="token punctuation">.</span>UnaryInvoker<span class="token punctuation">,</span> opts <span class="token operator">...</span>grpc<span class="token punctuation">.</span>CallOption<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;--&gt; unary interceptor: %s&quot;</span><span class="token punctuation">,</span> method<span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u9700\u8981\u8BA4\u8BC1\u3002</span>
		<span class="token keyword">if</span> authInterceptor<span class="token punctuation">.</span>authMethods<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4E3A context \u6DFB\u52A0 token\uFF0C\u7136\u540E\u5C06\u8BF7\u6C42\u8FD4\u56DE</span>
			<span class="token keyword">return</span> <span class="token function">invoker</span><span class="token punctuation">(</span>authInterceptor<span class="token punctuation">.</span><span class="token function">attachToken</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span> method<span class="token punctuation">,</span> req<span class="token punctuation">,</span> reply<span class="token punctuation">,</span> cc<span class="token punctuation">,</span> opts<span class="token operator">...</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token function">invoker</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> method<span class="token punctuation">,</span> req<span class="token punctuation">,</span> reply<span class="token punctuation">,</span> cc<span class="token punctuation">,</span> opts<span class="token operator">...</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>authInterceptor <span class="token operator">*</span>AuthInterceptor<span class="token punctuation">)</span> <span class="token function">Stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> grpc<span class="token punctuation">.</span>StreamClientInterceptor <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> desc <span class="token operator">*</span>grpc<span class="token punctuation">.</span>StreamDesc<span class="token punctuation">,</span> cc <span class="token operator">*</span>grpc<span class="token punctuation">.</span>ClientConn<span class="token punctuation">,</span> method <span class="token builtin">string</span><span class="token punctuation">,</span> streamer grpc<span class="token punctuation">.</span>Streamer<span class="token punctuation">,</span> opts <span class="token operator">...</span>grpc<span class="token punctuation">.</span>CallOption<span class="token punctuation">)</span> <span class="token punctuation">(</span>grpc<span class="token punctuation">.</span>ClientStream<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;--&gt; stream interceptor: %s&quot;</span><span class="token punctuation">,</span> method<span class="token punctuation">)</span>
		<span class="token keyword">if</span> authInterceptor<span class="token punctuation">.</span>authMethods<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4E3A context \u6DFB\u52A0 token\uFF0C\u7136\u540E\u5C06\u8BF7\u6C42\u8FD4\u56DE</span>
			<span class="token keyword">return</span> <span class="token function">streamer</span><span class="token punctuation">(</span>authInterceptor<span class="token punctuation">.</span><span class="token function">attachToken</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span> desc<span class="token punctuation">,</span> cc<span class="token punctuation">,</span> method<span class="token punctuation">,</span> opts<span class="token operator">...</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token function">streamer</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> desc<span class="token punctuation">,</span> cc<span class="token punctuation">,</span> method<span class="token punctuation">,</span> opts<span class="token operator">...</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>authInterceptor <span class="token operator">*</span>AuthInterceptor<span class="token punctuation">)</span> <span class="token function">attachToken</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> context<span class="token punctuation">.</span>Context <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD9\u91CC\u7684\u952E\u8981\u548C\u670D\u52A1\u7AEF\u53D6\u51FA\u7684\u952E\u4E00\u81F4\u3002</span>
	<span class="token keyword">return</span> metadata<span class="token punctuation">.</span><span class="token function">AppendToOutgoingContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token string">&quot;authorization&quot;</span><span class="token punctuation">,</span> authInterceptor<span class="token punctuation">.</span>accessToken<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>\u7531\u4E8E token \u5B58\u5728\u6709\u6548\u671F\uFF0C\u6240\u4EE5\u5728\u5BA2\u6237\u7AEF\u62E6\u622A\u5668\u4E0A\u5B9A\u4E49\u4E00\u4E2A\u5B9A\u65F6\u5237\u65B0 token \u7684\u65B9\u6CD5\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>authInterceptor <span class="token operator">*</span>AuthInterceptor<span class="token punctuation">)</span> <span class="token function">refreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	accessToken<span class="token punctuation">,</span> err <span class="token operator">:=</span> authInterceptor<span class="token punctuation">.</span>authClient<span class="token punctuation">.</span><span class="token function">Login</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	authInterceptor<span class="token punctuation">.</span>accessToken <span class="token operator">=</span> accessToken
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>authInterceptor <span class="token operator">*</span>AuthInterceptor<span class="token punctuation">)</span> <span class="token function">scheduleRefreshToken</span><span class="token punctuation">(</span>refreshDuration time<span class="token punctuation">.</span>Duration<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7B2C\u4E00\u6B21\u6267\u884C\u5148\u5C1D\u8BD5\u83B7\u53D6 token\uFF0C\u5982\u679C\u5931\u8D25\u5219\u76F4\u63A5\u7ED3\u675F\u3002</span>
	err <span class="token operator">:=</span> authInterceptor<span class="token punctuation">.</span><span class="token function">refreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		wait <span class="token operator">:=</span> refreshDuration
		<span class="token keyword">for</span> <span class="token punctuation">{</span>
			time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>wait<span class="token punctuation">)</span>
			err <span class="token operator">:=</span> authInterceptor<span class="token punctuation">.</span><span class="token function">refreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u5931\u8D25\u4E86\u5C31\u77ED\u65F6\u95F4\u5185\u91CD\u65B0\u5C1D\u8BD5\u3002</span>
				wait <span class="token operator">=</span> time<span class="token punctuation">.</span>Second
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				wait <span class="token operator">=</span> refreshDuration
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u5BA2\u6237\u7AEF\u542F\u52A8\u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u56E0\u4E3A\u5BA2\u6237\u7AEF\u62E6\u622A\u5668\u6210\u5458\u4E2D\u6709\u4E00\u4E2A access token\uFF0C\u6240\u4EE5\u5BA2\u6237\u7AEF\u5148\u4F7F\u7528\u4E0D\u5E26\u62E6\u622A\u5668\u7684 grpc \u8FDE\u63A5\u5230\u670D\u52A1\u7AEF\u5E76\u8FDB\u884C\u767B\u5F55\u83B7\u53D6 token\uFF0C\u83B7\u53D6 token \u540E\u521B\u5EFA\u51FA\u62E6\u622A\u5668\u518D\u65B0\u5EFA\u5E26\u6709\u62E6\u622A\u5668\u7684 grpc \u8FDE\u63A5\u3002</span>
conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token operator">*</span>serverAddress<span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithUnaryInterceptor</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">.</span><span class="token function">Unary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithStreamInterceptor</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">.</span><span class="token function">Stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="ssl-tls" tabindex="-1"><a class="header-anchor" href="#ssl-tls" aria-hidden="true">#</a> SSL TLS</h2><p>\u6D41\u7A0B\uFF1A\u670D\u52A1\u7AEF\u5177\u6709\u4E00\u4E2A\u516C\u94A5\u548C\u4E00\u4E2A\u79C1\u94A5\uFF0C\u9996\u5148\u670D\u52A1\u7AEF\u521B\u5EFA\u8BC1\u4E66\u7B7E\u540D CSR\uFF0C\u5176\u4E2D\u5305\u542B\u670D\u52A1\u7AEF\u7684\u516C\u94A5\u548C\u4E00\u4E9B\u8EAB\u4EFD\u4FE1\u606F\uFF0C\u7136\u540E\u670D\u52A1\u7AEF\u4F7F\u7528\u79C1\u94A5\u7B7E\u7F72\u4E86 CSR \u5E76\u53D1\u9001\u7ED9 CA\uFF0CCA \u4F7F\u7528\u670D\u52A1\u7AEF\u7684\u516C\u94A5\u9A8C\u8BC1 CSR \u7B7E\u540D\uFF0C\u8FD9\u6837\u5C31\u9A8C\u8BC1\u4E86\u4E00\u5BF9\u5BF9\u5E94\u7684\u79C1\u94A5\u548C\u516C\u94A5\uFF0C\u4E4B\u540E\uFF08\u6B64\u65F6\u8BC1\u4E66\u5E94\u8BE5\u4E0D\u662F\u88AB\u670D\u52A1\u5355\u79C1\u94A5\u52A0\u5BC6\u7684\u72B6\u6001\uFF09 CA \u4F7F\u7528\u81EA\u5DF1\u7684\u79C1\u94A5\u5728\u8BC1\u4E66\u4E0A\u7B7E\u540D\u7136\u540E\u8FD4\u56DE\u7ED9\u670D\u52A1\u7AEF\uFF0C\u670D\u52A1\u7AEF\u4E0E\u5BA2\u6237\u7AEF\u5171\u4EAB\u8FD9\u4E2A\u8BC1\u4E66\uFF0C\u5BA2\u6237\u7AEF\u53EF\u4EE5\u4F7F\u7528 CA \u7684\u516C\u94A5\u5BF9\u8BC1\u4E66\u8FDB\u884C\u9A8C\u8BC1\u5E76\u83B7\u53D6\u5230\u670D\u52A1\u7AEF\u7684\u516C\u94A5\u3002</p><p>\u9996\u5148\u4F7F\u7528 OpenSSL \u751F\u6210 CA \u5BC6\u94A5\u548C\u8BC1\u4E66\u3001\u670D\u52A1\u7AEF\u5BC6\u94A5\u548C\u8BC1\u4E66\u3001\u5BA2\u6237\u7AEF\u5BC6\u94A5\u548C\u8BC1\u4E66\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 1. Generate CA&#39;s private key and self-signed certificate</span>
openssl req -x509 -newkey rsa:4096 -days <span class="token number">365</span> -nodes -keyout ca-key.pem -out ca-cert.pem -subj <span class="token string">&quot;/C=CN/ST=ShanDong/L=QingDao/O=company/OU=demo/CN=koston/emailAddress=koston.zhuang@demo.com&quot;</span>

<span class="token comment"># 2. Generate web server&#39;s private key and certificate signing request (CSR)</span>
openssl req -newkey rsa:4096 -nodes -keyout server-key.pem -out server-req.pem -subj <span class="token string">&quot;/C=CN/ST=ShanDong/L=QingDao/O=company/OU=demo/CN=koston/emailAddress=koston.zhuang@demo.com&quot;</span>

<span class="token comment"># 3. Use CA&#39;s private key to sign web server&#39;s CSR and get back the signed certificate</span>
openssl x509 -req -in server-req.pem -days <span class="token number">60</span> -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out server-cert.pem -extfile server-ext.cnf

<span class="token comment"># 4. Generate client&#39;s private key and certificate signing request (CSR)</span>
openssl req -newkey rsa:4096 -nodes -keyout client-key.pem -out client-req.pem -subj <span class="token string">&quot;/C=CN/ST=ShanDong/L=QingDao/O=company/OU=demo/CN=koston/emailAddress=koston.zhuang@demo.com&quot;</span>

<span class="token comment"># 5. Use CA&#39;s private key to sign client&#39;s CSR and get back the signed certificate</span>
openssl x509 -req -in client-req.pem -days <span class="token number">60</span> -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out client-cert.pem -extfile client-ext.cnf
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u670D\u52A1\u7AEF\u8BA4\u8BC1" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u7AEF\u8BA4\u8BC1" aria-hidden="true">#</a> \u670D\u52A1\u7AEF\u8BA4\u8BC1</h3><p>\u4FEE\u6539\u670D\u52A1\u7AEF\u542F\u52A8\u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">loadTLSCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>credentials<span class="token punctuation">.</span>TransportCredentials<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	serverCert<span class="token punctuation">,</span> err <span class="token operator">:=</span> tls<span class="token punctuation">.</span><span class="token function">LoadX509KeyPair</span><span class="token punctuation">(</span><span class="token string">&quot;ssl/server-cert.pem&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ssl/server-key.pem&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	config <span class="token operator">:=</span> <span class="token operator">&amp;</span>tls<span class="token punctuation">.</span>Config<span class="token punctuation">{</span>
		Certificates<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>tls<span class="token punctuation">.</span>Certificate<span class="token punctuation">{</span>serverCert<span class="token punctuation">}</span><span class="token punctuation">,</span>
		ClientAuth<span class="token punctuation">:</span> tls<span class="token punctuation">.</span>NoClientCert<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> credentials<span class="token punctuation">.</span><span class="token function">NewTLS</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
<span class="token comment">// main \u51FD\u6570\u4E2D</span>
tlsCredentials<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">loadTLSCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
	log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span><span class="token string">&quot;cannot load TLS credentials:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
grpcServer <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span>
	grpc<span class="token punctuation">.</span><span class="token function">Creds</span><span class="token punctuation">(</span>tlsCredentials<span class="token punctuation">)</span><span class="token punctuation">,</span>
	grpc<span class="token punctuation">.</span><span class="token function">UnaryInterceptor</span><span class="token punctuation">(</span>authInterceptor<span class="token punctuation">.</span><span class="token function">Unary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	grpc<span class="token punctuation">.</span><span class="token function">StreamInterceptor</span><span class="token punctuation">(</span>authInterceptor<span class="token punctuation">.</span><span class="token function">Stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u4FEE\u6539\u5BA2\u6237\u7AEF\u542F\u52A8\u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">loadTLSCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>credentials<span class="token punctuation">.</span>TransportCredentials<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	pemServerCA<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">&quot;ssl/ca-cert.pem&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	certPool <span class="token operator">:=</span> x509<span class="token punctuation">.</span><span class="token function">NewCertPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token operator">!</span>certPool<span class="token punctuation">.</span><span class="token function">AppendCertsFromPEM</span><span class="token punctuation">(</span>pemServerCA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;failed to add server CA&#39;s certificate&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	config <span class="token operator">:=</span> <span class="token operator">&amp;</span>tls<span class="token punctuation">.</span>Config<span class="token punctuation">{</span>
		RootCAs<span class="token punctuation">:</span> certPool<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> credentials<span class="token punctuation">.</span><span class="token function">NewTLS</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
tlsCredentials<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">loadTLSCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
	log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span><span class="token string">&quot;cannot load TLS credentials:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token operator">*</span>serverAddress<span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>tlsCredentials<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="\u53CC\u7AEF\u8BA4\u8BC1" tabindex="-1"><a class="header-anchor" href="#\u53CC\u7AEF\u8BA4\u8BC1" aria-hidden="true">#</a> \u53CC\u7AEF\u8BA4\u8BC1</h3><p>\u4FEE\u6539\u670D\u52A1\u7AEF\u542F\u52A8\u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">loadTLSCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>credentials<span class="token punctuation">.</span>TransportCredentials<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	serverCert<span class="token punctuation">,</span> err <span class="token operator">:=</span> tls<span class="token punctuation">.</span><span class="token function">LoadX509KeyPair</span><span class="token punctuation">(</span><span class="token string">&quot;ssl/server-cert.pem&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ssl/server-key.pem&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
  <span class="token comment">// \u8FD9\u91CC\u6DFB\u52A0 CA \u76F8\u5173\u3002</span>
	pemClientCA<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">&quot;ssl/ca-cert.pem&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	certPool <span class="token operator">:=</span> x509<span class="token punctuation">.</span><span class="token function">NewCertPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token operator">!</span>certPool<span class="token punctuation">.</span><span class="token function">AppendCertsFromPEM</span><span class="token punctuation">(</span>pemClientCA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;failed to add client CA&#39;s certificate&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	config <span class="token operator">:=</span> <span class="token operator">&amp;</span>tls<span class="token punctuation">.</span>Config<span class="token punctuation">{</span>
    <span class="token comment">// \u7ED3\u6784\u4F53\u5185\u6210\u5458\u4FEE\u6539\u3002</span>
		Certificates<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>tls<span class="token punctuation">.</span>Certificate<span class="token punctuation">{</span>serverCert<span class="token punctuation">}</span><span class="token punctuation">,</span>
		ClientAuth<span class="token punctuation">:</span> tls<span class="token punctuation">.</span>RequireAndVerifyClientCert<span class="token punctuation">,</span>
		ClientCAs<span class="token punctuation">:</span> certPool<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> credentials<span class="token punctuation">.</span><span class="token function">NewTLS</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u4FEE\u6539\u5BA2\u6237\u7AEF\u542F\u52A8\u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">loadTLSCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>credentials<span class="token punctuation">.</span>TransportCredentials<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	pemServerCA<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">&quot;ssl/ca-cert.pem&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	certPool <span class="token operator">:=</span> x509<span class="token punctuation">.</span><span class="token function">NewCertPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token operator">!</span>certPool<span class="token punctuation">.</span><span class="token function">AppendCertsFromPEM</span><span class="token punctuation">(</span>pemServerCA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;failed to add server CA&#39;s certificate&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u4FEE\u6539\uFF0C\u6DFB\u52A0\u5BA2\u6237\u7AEF\u8BC1\u4E66\u3001\u5BC6\u94A5\u3002</span>
	clientCert<span class="token punctuation">,</span> err <span class="token operator">:=</span> tls<span class="token punctuation">.</span><span class="token function">LoadX509KeyPair</span><span class="token punctuation">(</span><span class="token string">&quot;ssl/client-cert.pem&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ssl/client-key.pem&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	config <span class="token operator">:=</span> <span class="token operator">&amp;</span>tls<span class="token punctuation">.</span>Config<span class="token punctuation">{</span>
    <span class="token comment">// \u4FEE\u6539</span>
		Certificates<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>tls<span class="token punctuation">.</span>Certificate<span class="token punctuation">{</span>clientCert<span class="token punctuation">}</span><span class="token punctuation">,</span>
		RootCAs<span class="token punctuation">:</span> certPool<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> credentials<span class="token punctuation">.</span><span class="token function">NewTLS</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="load-balance" tabindex="-1"><a class="header-anchor" href="#load-balance" aria-hidden="true">#</a> Load Balance</h2><h3 id="no-tls" tabindex="-1"><a class="header-anchor" href="#no-tls" aria-hidden="true">#</a> NO TLS</h3><p>\u4FEE\u6539 Nginx \u914D\u7F6E\u6587\u4EF6\uFF1A</p><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>worker_processes auto;
error_log /var/log/nginx/error.log;
events {
	worker_connections 768;
}

http {
	access_log /var/log/nginx/access.log;

	upstream hello_services {
		server 0.0.0.0:8081;
		server 0.0.0.0:8082;
	}

	server {
		listen	80 http2;
		location / {
			grpc_pass grpc://hello_services;
		}
	}
}
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u5C06 gRPC \u670D\u52A1\u7AEF\u542F\u52A8\u5728\u5BF9\u5E94\u7684\u7AEF\u53E3\u5373\u53EF\uFF0C\u8BBF\u95EE Nginx \u76D1\u542C\u7684 80 \u7AEF\u53E3\u5373\u53EF\u8BBF\u95EE gRPC \u7684\u63A5\u53E3\u3002</p><h3 id="tls" tabindex="-1"><a class="header-anchor" href="#tls" aria-hidden="true">#</a> TLS</h3><p>TODO</p><h2 id="grpc-gateway" tabindex="-1"><a class="header-anchor" href="#grpc-gateway" aria-hidden="true">#</a> gRPC Gateway</h2><h3 id="\u5B89\u88C5\u5DE5\u5177" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5\u5DE5\u5177" aria-hidden="true">#</a> \u5B89\u88C5\u5DE5\u5177</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>go <span class="token function">install</span> github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@latest
go <span class="token function">install</span> github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@latest
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u5728\u670D\u52A1-proto-\u6587\u4EF6\u4E2D\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5728\u670D\u52A1-proto-\u6587\u4EF6\u4E2D\u5B9A\u4E49" aria-hidden="true">#</a> \u5728\u670D\u52A1 proto \u6587\u4EF6\u4E2D\u5B9A\u4E49</h3><p>\u9996\u5148\u5B9A\u4E49\u4E00\u4E2A\u7B80\u5355\u7684\u670D\u52A1\uFF1A</p><div class="language-protobuf ext-protobuf line-numbers-mode"><pre class="language-protobuf"><code><span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">&quot;proto3&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">option</span> go_package <span class="token operator">=</span> <span class="token string">&quot;./;pb&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">message</span> <span class="token class-name">HelloWorldRequest</span> <span class="token punctuation">{</span>
  <span class="token builtin">string</span> msg <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">message</span> <span class="token class-name">HelloWorldResponse</span> <span class="token punctuation">{</span>
  <span class="token builtin">string</span> msg <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-protobuf ext-protobuf line-numbers-mode"><pre class="language-protobuf"><code><span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">&quot;proto3&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">option</span> go_package <span class="token operator">=</span> <span class="token string">&quot;./;pb&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token string">&quot;proto/hello.proto&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;google/api/annotations.proto&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">service</span> <span class="token class-name">HelloService</span> <span class="token punctuation">{</span>
  <span class="token keyword">rpc</span> <span class="token function">HelloWorld</span><span class="token punctuation">(</span><span class="token class-name">HelloWorldRequest</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token class-name">HelloWorldResponse</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">option</span> <span class="token punctuation">(</span>google<span class="token punctuation">.</span>api<span class="token punctuation">.</span>http<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
      post<span class="token punctuation">:</span> <span class="token string">&quot;/v1/example/echo/{msg}&quot;</span> <span class="token comment">// \u7ED1\u5B9A\u8BF7\u6C42\u65B9\u6CD5\u548C\u8BF7\u6C42\u8DEF\u5F84</span>
      body<span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span>
      additional_bindings <span class="token punctuation">{</span> <span class="token comment">// \u7ED1\u5B9A\u5176\u4ED6\u8BF7\u6C42\u65B9\u5F0F\u548C\u8DEF\u5F84</span>
        get<span class="token punctuation">:</span> <span class="token string">&quot;/v1/get&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,86),y={class:"custom-container warning"},h=n("p",{class:"custom-container-title"},"\u6CE8\u610F",-1),w=s("\u8FD9\u79CD\u65B9\u5F0F\u9700\u8981\u5C06 "),q={href:"https://github.com/googleapis/googleapis",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"googleapis",-1),C=s(),x=n("code",null,"google/api",-1),I=s(" \u76EE\u5F55\u4E2D\u7684\u51E0\u4E2A\u6587\u4EF6\u62F7\u8D1D\u5230\u9879\u76EE\u4E2D\uFF1A"),L=n("code",null,"annotations.proto",-1),_=s("\u3001"),R=n("code",null,"field_behavior.proto",-1),P=s("\u3001"),E=n("code",null,"httpbody.proto",-1),A=s("\u3001"),D=n("code",null,"http.proto",-1),T=s("\u3002"),U=a(`<p>\u6267\u884C\u7F16\u8BD1\u547D\u4EE4\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>protoc -I <span class="token builtin class-name">.</span> --go_out<span class="token operator">=</span>pb --go-grpc_out<span class="token operator">=</span>pb --grpc-gateway_out pb --grpc-gateway_opt <span class="token assign-left variable">logtostderr</span><span class="token operator">=</span>true  proto/*.proto
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5B9E\u73B0\u6240\u6709\u7684\u63A5\u53E3\uFF0C\u6700\u7EC8\u9879\u76EE\u6587\u4EF6\u7ED3\u6784\uFF1A</p><p><img src="`+r+`" alt="\u9879\u76EE\u6587\u4EF6\u7ED3\u6784"></p><p>\u5176\u4E2D\u7684 <code>api.yaml</code> \u662F\u53E6\u4E00\u79CD grpc-gateway \u7684\u4F7F\u7528\u65B9\u5F0F\uFF0C\u8FD9\u91CC\u5148\u4E0D\u8003\u8651\u3002</p><p>main.go\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;context&quot;</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;net&quot;</span>
	<span class="token string">&quot;net/http&quot;</span>
	<span class="token string">&quot;proto/pb&quot;</span>
	<span class="token string">&quot;proto/service&quot;</span>

	<span class="token string">&quot;github.com/grpc-ecosystem/grpc-gateway/v2/runtime&quot;</span>
	<span class="token string">&quot;google.golang.org/grpc&quot;</span>
	<span class="token string">&quot;google.golang.org/grpc/credentials/insecure&quot;</span>
	<span class="token string">&quot;google.golang.org/grpc/reflection&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">startHttpServer</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mux <span class="token operator">:=</span> runtime<span class="token punctuation">.</span><span class="token function">NewServeMux</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	err <span class="token operator">:=</span> pb<span class="token punctuation">.</span><span class="token function">RegisterHelloServiceHandlerFromEndpoint</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> mux<span class="token punctuation">,</span> <span class="token string">&quot;localhost:8082&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>grpc<span class="token punctuation">.</span>DialOption<span class="token punctuation">{</span>grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>insecure<span class="token punctuation">.</span><span class="token function">NewCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;RegisterHelloServiceHandlerFromEndpoint failed:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">&quot;:8081&quot;</span><span class="token punctuation">,</span> mux<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">startgRPCServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	grpcServer <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	helloServer <span class="token operator">:=</span> service<span class="token punctuation">.</span>HelloService<span class="token punctuation">{</span><span class="token punctuation">}</span>
	pb<span class="token punctuation">.</span><span class="token function">RegisterHelloServiceServer</span><span class="token punctuation">(</span>grpcServer<span class="token punctuation">,</span> helloServer<span class="token punctuation">)</span>
	reflection<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span>grpcServer<span class="token punctuation">)</span>
	listener<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:8082&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;start server failed&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	err <span class="token operator">=</span> grpcServer<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;start grpc server failed&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">go</span> <span class="token function">startHttpServer</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token function">startgRPCServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><p>\u5176\u4E2D\u7684 <code>RegisterHelloServiceHandlerFromEndpoint</code> \u65B9\u6CD5\u53EF\u4EE5\u7528\u6765\u8F6C\u6362\u5305\u62EC\u6D41\u5F0F gRPC \u7684\u7C7B\u578B\uFF0C\u9700\u8981\u6307\u5B9A gRPC \u670D\u52A1\u7AEF\u7684\u8DEF\u5F84\uFF1B\u5982\u679C\u53EA\u6709\u4E00\u5143 gRPC \u53EF\u4EE5\u4F7F\u7528 <code>RegisterHelloServiceHandlerServer</code> \u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4E0D\u9700\u8981\u6307\u5B9A gRPC \u670D\u52A1\u7AEF\u7684\u8DEF\u5F84\uFF0C\u540C\u65F6\u4F7F\u7528\u8FD9\u4E2A\u65B9\u6CD5\u4E5F\u4E0D\u9700\u8981\u989D\u5916\u542F\u52A8 gRPC \u670D\u52A1\u7AEF\u3002</p><h3 id="\u5728-yaml-\u914D\u7F6E\u6587\u4EF6\u4E2D\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5728-yaml-\u914D\u7F6E\u6587\u4EF6\u4E2D\u5B9A\u4E49" aria-hidden="true">#</a> \u5728 YAML \u914D\u7F6E\u6587\u4EF6\u4E2D\u5B9A\u4E49</h3><p>\u5B9A\u4E49 <code>api.yaml</code> \u6587\u4EF6\uFF1A</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">type</span><span class="token punctuation">:</span> google.api.Service
<span class="token key atrule">config_version</span><span class="token punctuation">:</span> <span class="token number">3</span>

<span class="token key atrule">http</span><span class="token punctuation">:</span>
  <span class="token key atrule">rules</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">selector</span><span class="token punctuation">:</span> HelloService.HelloWorld
      <span class="token key atrule">post</span><span class="token punctuation">:</span> /v1/example/echo
      <span class="token key atrule">body</span><span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span>
      <span class="token key atrule">additional_bindings</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">get</span><span class="token punctuation">:</span> /v1/example/echo
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,11),F={href:"https://cloud.google.com/endpoints/docs/grpc-service-config/reference/rpc/google.api#special-notes",target:"_blank",rel:"noopener noreferrer"},N=s("\u914D\u7F6E\u53C2\u8003"),M=s("\uFF0C\u4F7F\u7528 YAML \u548C\u76F4\u63A5\u5728 proto \u6587\u4EF6\u4E2D\u5B9A\u4E49\u90FD\u53EF\u4EE5\u53C2\u8003\u8FD9\u91CC\u7684\u914D\u7F6E\u3002"),z=a(`<p>\u5176\u4ED6\u4EE3\u7801\u4E0D\u9700\u8981\u6539\u52A8\uFF0C\u6267\u884C\u7F16\u8BD1\u547D\u4EE4\u540E\u76F4\u63A5\u8FD0\u884C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>protoc -I <span class="token builtin class-name">.</span> --go_out<span class="token operator">=</span>pb --go-grpc_out pb --grpc-gateway_out pb --grpc-gateway_opt <span class="token assign-left variable">logtostderr</span><span class="token operator">=</span>true --grpc-gateway_opt <span class="token assign-left variable">grpc_api_configuration</span><span class="token operator">=</span>proto/api.yaml proto/*.proto
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="tls-1" tabindex="-1"><a class="header-anchor" href="#tls-1" aria-hidden="true">#</a> TLS</h3><p>TODO</p><h2 id="\u7ED3\u5408\u81EA\u5B9A\u4E49-tag-\u5B9E\u73B0-validate" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u5408\u81EA\u5B9A\u4E49-tag-\u5B9E\u73B0-validate" aria-hidden="true">#</a> \u7ED3\u5408\u81EA\u5B9A\u4E49 tag \u5B9E\u73B0 validate</h2><p>\u9996\u5148\u5B9A\u4E49\u4E0B\u9762\u8FD9\u6837\u4E00\u4E2A\u8BF7\u6C42\uFF1A</p><div class="language-protobuf ext-protobuf line-numbers-mode"><pre class="language-protobuf"><code><span class="token keyword">message</span> <span class="token class-name">DemoRequest</span><span class="token punctuation">{</span>
  <span class="token builtin">string</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// @gotags: valid:&quot;required,objectId&quot;</span>
  <span class="token builtin">string</span> status <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// @gotags: valid:&quot;in(succeed|failed|processing),required&quot;</span>
  <span class="token keyword">repeated</span> <span class="token builtin">string</span> ids <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// @gotags: valid:&quot;required,objectIdList&quot;</span>
  <span class="token builtin">bool</span> containDeleted <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
  <span class="token builtin">int64</span> option <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,7),O=s("\u8FD9\u91CC\u6211\u4EEC\u4F7F\u7528\u4E00\u4E2A "),H={href:"https://github.com/asaskevich/govalidator",target:"_blank",rel:"noopener noreferrer"},G=s("govalidator"),W=s(" \u5E93\uFF1A"),j=a(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>go get github.com/asaskevich/govalidator
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u8FD9\u4E2A\u5E93\u672C\u8EAB\u5177\u6709\u4E00\u4E9B\u5185\u7F6E\u7684\u89C4\u5219\uFF0C\u53EF\u4EE5\u5728\u6587\u6863\u4E2D\u627E\u5230\uFF0C\u8FD9\u91CC\u6211\u4EEC\u5B9E\u73B0\u81EA\u5B9A\u4E49\u9A8C\u8BC1\uFF0C\u8C03\u7528 <code>govalidator.CustomTypeTagMap.Set</code> \u65B9\u6CD5\u53EF\u4EE5\u81EA\u5B9A\u4E49\u9A8C\u8BC1\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// govalidator.TagMap[&quot;objectId&quot;] = govalidator.Validator(func(str string) bool {</span>
	<span class="token comment">// 	_, err := primitive.ObjectIDFromHex(str)</span>
	<span class="token comment">// 	return err == nil</span>
	<span class="token comment">// })</span>

	govalidator<span class="token punctuation">.</span>CustomTypeTagMap<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;objectId&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> o <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
		s <span class="token operator">:=</span> cast<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> primitive<span class="token punctuation">.</span><span class="token function">ObjectIDFromHex</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
		<span class="token keyword">return</span> err <span class="token operator">==</span> <span class="token boolean">nil</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	govalidator<span class="token punctuation">.</span>CustomTypeTagMap<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;objectIdList&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> o <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
		strs <span class="token operator">:=</span> cast<span class="token punctuation">.</span><span class="token function">ToStringSlice</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> str <span class="token operator">:=</span> <span class="token keyword">range</span> strs <span class="token punctuation">{</span>
			<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> primitive<span class="token punctuation">.</span><span class="token function">ObjectIDFromHex</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> <span class="token boolean">false</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token boolean">true</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u6CE8\u91CA\u4E2D\u7684\u65B9\u6CD5\u4E5F\u53EF\u4EE5\u7528\u6765\u81EA\u5B9A\u4E49\u89C4\u5219\uFF0C\u4F46\u662F\u53EA\u9002\u7528\u4E8E\u5355\u4E00\u5B57\u7B26\u4E32\u9A8C\u8BC1\uFF0C\u5982\u679C\u662F\u6570\u7EC4\u6216\u8005\u5176\u4ED6\u7C7B\u578B\u8FD8\u662F\u4E0D\u591F\u7075\u6D3B\u3002</p></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u5728\u63A5\u53E3\u5B9E\u73B0\u4E2D\u8C03\u7528\u9A8C\u8BC1\u65B9\u6CD5\u9A8C\u8BC1\u8BF7\u6C42\u5373\u53EF\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>ValidatorService<span class="token punctuation">)</span> <span class="token function">Demo</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token operator">*</span>proto<span class="token punctuation">.</span>DemoRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>proto<span class="token punctuation">.</span>EmptyResponse<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> govalidator<span class="token punctuation">.</span><span class="token function">ValidateStruct</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>proto<span class="token punctuation">.</span>EmptyResponse<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,6);function B(V,J){const p=o("ExternalLinkIcon");return c(),l(u,null,[k,n("div",b,[m,n("p",null,[d,n("a",g,[f,t(p)])])]),v,n("div",y,[h,n("p",null,[w,n("a",q,[S,t(p)]),C,x,I,L,_,R,P,E,A,D,T])]),U,n("p",null,[n("a",F,[N,t(p)]),M]),z,n("p",null,[O,n("a",H,[G,t(p)]),W]),j],64)}var Q=e(i,[["render",B]]);export{Q as default};
