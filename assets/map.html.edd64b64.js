import{_ as n,e as s}from"./app.269ed0ef.js";const a={},p=s(`<h1 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h1><p>map \u662F\u4E00\u79CD\u65E0\u5E8F\u7684\u57FA\u4E8E\u952E\u503C\u5BF9\u7684\u6570\u636E\u7ED3\u6784\uFF0CGo \u8BED\u8A00\u4E2D map \u662F\u5F15\u7528\u7C7B\u578B\uFF0C\u5FC5\u987B\u521D\u59CB\u5316\u624D\u80FD\u4F7F\u7528\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>userMap <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
userMap<span class="token punctuation">[</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;koston&quot;</span>
userMap<span class="token punctuation">[</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span>
userMap<span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;21&quot;</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>userMap<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u904D\u5386 map\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> userMap <span class="token punctuation">{</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s %s\\n&quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5224\u65AD\u67D0\u4E2A\u952E\u662F\u5426\u5B58\u5728\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>val<span class="token punctuation">,</span> ok <span class="token operator">:=</span> userMap<span class="token punctuation">[</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">]</span>
<span class="token keyword">if</span> ok <span class="token punctuation">{</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;this key not exist&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5220\u9664\u952E\u503C\u5BF9\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token function">delete</span><span class="token punctuation">(</span>userMap<span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u6309\u7167\u6307\u5B9A\u987A\u5E8F\u904D\u5386 map\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u83B7\u53D6 map \u7684 key \u6570\u7EC4</span>
keys <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>userMap<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> k <span class="token operator">:=</span> <span class="token keyword">range</span> userMap <span class="token punctuation">{</span>
  keys <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> k<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5BF9\u8FD9\u4E2A\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F</span>
sort<span class="token punctuation">.</span><span class="token function">Strings</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span>
<span class="token comment">// \u6309\u65B0\u987A\u5E8F\u8FDB\u884C\u904D\u5386</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> keys <span class="token punctuation">{</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> userMap<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,11);function t(e,o){return p}var u=n(a,[["render",t]]);export{u as default};
