import{_ as n,e as s}from"./app.269ed0ef.js";const a={},p=s(`<h1 id="\u8282\u70B9\u6D41" tabindex="-1"><a class="header-anchor" href="#\u8282\u70B9\u6D41" aria-hidden="true">#</a> \u8282\u70B9\u6D41</h1><h2 id="\u4F7F\u7528\u5B57\u7B26\u8F93\u5165\u6D41-filereader-\u8BBF\u95EE\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u5B57\u7B26\u8F93\u5165\u6D41-filereader-\u8BBF\u95EE\u6587\u4EF6" aria-hidden="true">#</a> \u4F7F\u7528\u5B57\u7B26\u8F93\u5165\u6D41 FileReader \u8BBF\u95EE\u6587\u4EF6</h2><p>\u4F7F\u7528\u65E0\u53C2 <code>read()</code> \u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\Javaweb\\\\Java-Basic\\\\IO\\\\src\\\\test.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileReader</span> fileReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u8FD9\u79CD\u5199\u6CD5\u4E0D\u9700\u8981\u5728finally\u4E2D\u5173\u95EDFileReader</span>
    <span class="token keyword">int</span> data<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>data <span class="token operator">=</span> fileReader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u8BFB\u5230-1\u8868\u793A\u6587\u4EF6\u7ED3\u675F</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>\u5982\u679C\u521B\u5EFA FileReader \u4E0D\u5728 try \u62EC\u53F7\u5185\uFF0C\u5219\u8981\u5728 finally \u4E2D\u5173\u95ED\u6D41\uFF0C\u4E14\u521B\u5EFA\u8FC7\u7A0B\u8981\u4F7F\u7528 try...catch \u5305\u88F9\uFF0C\u9632\u6B62\u629B\u51FA\u5F02\u5E38\u540E\u4E0D\u5173\u95ED\u6D41\u3002</p></div><p>\u4F7F\u7528\u6709\u53C2 <code>read()</code> \u65B9\u6CD5\uFF0C\u4F20\u5165\u4E00\u4E2A char \u6570\u7EC4\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\Javaweb\\\\Java-Basic\\\\IO\\\\src\\\\test.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileReader</span> fileReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> data<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token operator">=</span>fileReader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u5199\u6CD5\u4E00\uFF1A\u76F4\u63A5\u8F93\u51FAchar\u6570\u7EC4\uFF0C\u6CE8\u610F\u904D\u5386\u7684\u7EC8\u70B9\u662Fread\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C</span>
        <span class="token comment">//\u5982\u679C\u6700\u540E\u4E00\u6B21\u8BFB\u53D6\u7684\u5B57\u7B26\u5185\u5BB9\u65E0\u6CD5\u586B\u5145\u6EE1\u7F13\u51B2\u6570\u7EC4\uFF0C\u7F3A\u5C11\u7684\u90E8\u5206\u4ECD\u7136\u4FDD\u5B58\u4E0A\u6B21\u8BFB\u51FA\u7684\u7ED3\u679C</span>
        <span class="token comment">//                for (int i = 0; i &lt; data; i++) {</span>
        <span class="token comment">//                    System.out.print(buffer[i]);</span>
        <span class="token comment">//                }</span>
        <span class="token comment">//\u5199\u6CD5\u4E8C\uFF1A\u4F7F\u7528String\u6709\u53C2\u6784\u9020\u8F93\u51FAString\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662Fchar\u6570\u7EC4\uFF0C\u540E\u4E24\u4E2A\u53C2\u6570\u5206\u522B\u662F\u5E0C\u671B\u83B7\u53D6\u7684\u6570\u7EC4\u7684\u8D77\u70B9\u548C\u7EC8\u70B9</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="\u4F7F\u7528\u5B57\u7B26\u8F93\u51FA\u6D41filewriter\u8F93\u51FA\u5230\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u5B57\u7B26\u8F93\u51FA\u6D41filewriter\u8F93\u51FA\u5230\u6587\u4EF6" aria-hidden="true">#</a> \u4F7F\u7528\u5B57\u7B26\u8F93\u51FA\u6D41FileWriter\u8F93\u51FA\u5230\u6587\u4EF6</h2><p>\u5BF9\u5E94\u6587\u4EF6\u53EF\u4EE5\u4E0D\u5B58\u5728</p><ul><li>\u8986\u76D6\u539F\u5185\u5BB9</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>PATH_PREFIX <span class="token operator">+</span> <span class="token string">&quot;out.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileWriter</span> fileWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fileWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;Hello\\nWorld&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>\u5728\u539F\u5185\u5BB9\u540E\u6DFB\u52A0</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>PATH_PREFIX <span class="token operator">+</span> <span class="token string">&quot;out.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileWriter</span> fileWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fileWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;Hello\\nWorld&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u4F7F\u7528\u5B57\u8282\u8F93\u5165\u8F93\u51FA\u6D41\u590D\u5236\u56FE\u7247" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u5B57\u8282\u8F93\u5165\u8F93\u51FA\u6D41\u590D\u5236\u56FE\u7247" aria-hidden="true">#</a> \u4F7F\u7528\u5B57\u8282\u8F93\u5165\u8F93\u51FA\u6D41\u590D\u5236\u56FE\u7247</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">File</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>PATH_PREFIX <span class="token operator">+</span> <span class="token string">&quot;1.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">File</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>PATH_PREFIX <span class="token operator">+</span> <span class="token string">&quot;2.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">FileInputStream</span> fileInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">FileOutputStream</span> fileOutputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>fileInputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span> <span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    fileOutputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
fileOutputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fileInputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,15);function t(e,c){return p}var l=n(a,[["render",t]]);export{l as default};
