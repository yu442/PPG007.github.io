import{_ as n,e as s}from"./app.269ed0ef.js";const a={},p=s(`<h1 id="\u4E09\u76EE\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4E09\u76EE\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u4E09\u76EE\u8FD0\u7B97\u7B26</h1><h2 id="\u4E09\u76EE\u8FD0\u7B97\u7B26\u8FD4\u56DE\u503C\u7C7B\u578B\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u4E09\u76EE\u8FD0\u7B97\u7B26\u8FD4\u56DE\u503C\u7C7B\u578B\u89C4\u5219" aria-hidden="true">#</a> \u4E09\u76EE\u8FD0\u7B97\u7B26\u8FD4\u56DE\u503C\u7C7B\u578B\u89C4\u5219</h2><ul><li>\u82E5\u4E24\u4E2A\u64CD\u4F5C\u6570\u4E0D\u53EF\u8F6C\u6362\uFF0C\u5219\u4E0D\u505A\u8F6C\u6362\uFF0C\u8FD4\u56DE\u503C\u4E3A Object \u7C7B\u578B\u3002</li><li>\u82E5\u4E24\u4E2A\u64CD\u4F5C\u6570\u662F\u660E\u786E\u7C7B\u578B\u7684\u8868\u8FBE\u5F0F\uFF08\u6BD4\u5982\u53D8\u91CF\uFF09\uFF0C\u5219\u6309\u7167\u6B63\u5E38\u7684\u4E8C\u8FDB\u5236\u6570\u5B57\u6765\u8F6C\u6362\uFF0Cint \u7C7B\u578B\u8F6C\u6362\u4E3A long \u7C7B\u578B\uFF0Clong \u7C7B\u578B\u8F6C\u6362\u4E3A float \u7C7B\u578B\u7B49\u3002</li><li>\u82E5\u4E24\u4E2A\u64CD\u4F5C\u6570\u4E2D\u6709\u4E00\u4E2A\u662F\u6570\u5B57 S,\u53E6\u5916\u4E00\u4E2A\u662F\u8868\u8FBE\u5F0F\uFF0C\u4E14\u5176\u7C7B\u578B\u6807\u793A\u4E3A T\uFF0C\u90A3\u4E48\uFF0C\u82E5\u6570\u5B57 S \u5728 T \u7684\u8303\u56F4\u5185\uFF0C\u5219\u8F6C\u6362\u4E3A T \u7C7B\u578B\uFF1B\u82E5 S \u8D85\u51FA\u4E86 T \u7C7B\u578B\u7684\u8303\u56F4\uFF0C\u5219 T \u8F6C\u6362\u4E3A S \u7C7B\u578B\u3002</li><li>\u82E5\u4E24\u4E2A\u64CD\u4F5C\u6570\u90FD\u662F\u76F4\u63A5\u91CF\u6570\u5B57\uFF0C\u5219\u8FD4\u56DE\u503C\u7C7B\u578B\u4E3A\u8303\u56F4\u8F83\u5927\u8005\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Object</span> o1 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Double</span><span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u4E0A\u9762\u7684\u8BED\u53E5\u7B26\u5408\u7B2C\u56DB\u6761\uFF0C\u8FD4\u56DE double \u7C7B\u578B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">short</span> s <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">// \u4E09\u76EE\uFF0C\u4E00\u8FB9\u4E3Abyte\u53E6\u4E00\u8FB9\u4E3Achar\uFF0C\u7ED3\u679C\u4E3Aint</span>
<span class="token comment">// \u5176\u5B83\u60C5\u51B5\u7ED3\u679C\u4E3A\u4E24\u8FB9\u4E2D\u8303\u56F4\u5927\u7684\u3002\u9002\u7528\u5305\u88C5\u7C7B\u578B</span>
i <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token operator">?</span> b <span class="token operator">:</span> c<span class="token punctuation">;</span> <span class="token comment">// int</span>
b <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token operator">?</span> b <span class="token operator">:</span> b<span class="token punctuation">;</span> <span class="token comment">// byte</span>
s <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token operator">?</span> b <span class="token operator">:</span> s<span class="token punctuation">;</span> <span class="token comment">// short</span>

<span class="token comment">// \u8868\u8FBE\u5F0F\uFF0C\u4E24\u8FB9\u4E3Abyte,short,char\uFF0C\u7ED3\u679C\u4E3Aint\u578B</span>
<span class="token comment">// \u5176\u5B83\u60C5\u51B5\u7ED3\u679C\u4E3A\u4E24\u8FB9\u4E2D\u8303\u56F4\u5927\u7684\u3002\u9002\u7528\u5305\u88C5\u7C7B\u578B</span>
i <span class="token operator">=</span> b <span class="token operator">+</span> c<span class="token punctuation">;</span> <span class="token comment">// int</span>
i <span class="token operator">=</span> b <span class="token operator">+</span> b<span class="token punctuation">;</span> <span class="token comment">// int</span>
i <span class="token operator">=</span> b <span class="token operator">+</span> s<span class="token punctuation">;</span> <span class="token comment">// int</span>

<span class="token comment">// \u5F53 a \u4E3A\u57FA\u672C\u6570\u636E\u7C7B\u578B\u65F6\uFF0Ca += b\uFF0C\u76F8\u5F53\u4E8E a = (a) (a + b)</span>
<span class="token comment">// \u5F53 a \u4E3A\u5305\u88C5\u7C7B\u578B\u65F6\uFF0C a += b \u5C31\u662F a = a + b</span>
b <span class="token operator">+=</span> s<span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u95EE\u9898</span>
c <span class="token operator">+=</span> i<span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u95EE\u9898</span>

<span class="token comment">// \u5E38\u91CF\u4EFB\u541B\u641E\uFF0Clong\u4EE5\u4E0A\u4E0D\u80FD\u8D8A</span>
b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u95EE\u9898</span>
<span class="token comment">// i = (long) 1 // \u9519\u8BEF</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,6);function e(o,t){return p}var l=n(a,[["render",e]]);export{l as default};
