import{_ as n,e as s}from"./app.269ed0ef.js";const a={},p=s(`<h1 id="\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF" aria-hidden="true">#</a> \u53D8\u91CF</h1><h2 id="\u53D8\u91CF\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u58F0\u660E" aria-hidden="true">#</a> \u53D8\u91CF\u58F0\u660E</h2><p>\u4F7F\u7528\u5173\u952E\u5B57\u58F0\u660E\u53D8\u91CF\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>int a <span class="token operator">=</span> <span class="token function">nullAbleButNotNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token keyword">dynamic</span> b <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span> c <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u9ED8\u8BA4\u503C" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u503C" aria-hidden="true">#</a> \u9ED8\u8BA4\u503C</h2><p>\u6240\u6709\u5141\u8BB8\u4E3A\u7A7A\u7684\u7C7B\u578B\u7684\u9ED8\u8BA4\u503C\u90FD\u662F null\uFF0C\u5BF9\u4E8E\u4E0D\u5141\u8BB8\u4E3A null \u7684\u7C7B\u578B\uFF0C\u9700\u8981\u5728\u4F7F\u7528\u524D\u521D\u59CB\u5316\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>int b<span class="token punctuation">;</span>
<span class="token function">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: Non-nullable variable &#39;b&#39; must be assigned before it can be used.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5982\u679C\u4F60\u786E\u5B9A\u53D8\u91CF\u4F7F\u7528\u524D\u5DF2\u88AB\u521D\u59CB\u5316\uFF0C\u53EF\u4EE5\u5728\u53D8\u91CF\u58F0\u660E\u524D\u6DFB\u52A0 late\uFF0C\u4F46\u662F\u5982\u679C\u5B9E\u9645\u4E0A\u6CA1\u6709\u521D\u59CB\u5316\u5219\u4F1A\u5728\u8FD0\u884C\u671F\u62A5\u9519\uFF0Clate \u5173\u952E\u5B57\u5728 2.12 \u7248\u672C\u540E\u5F15\u5165\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>late int a<span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD0\u884C\u65F6\u62A5\u9519</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5982\u679C\u4E00\u4E2A\u53D8\u91CF\u4F7F\u7528\u4E86 late \u4FEE\u9970\u4E14\u5728\u58F0\u660E\u65F6\u5C31\u8FDB\u884C\u4E86\u521D\u59CB\u5316\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u53D8\u91CF\u76F4\u5230\u88AB\u4F7F\u7528\u65F6\u624D\u4F1A\u88AB\u8D4B\u503C\uFF08\u61D2\u52A0\u8F7D\uFF09\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;init&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  late <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// not print</span>
  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// print</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="final-\u548C-const" tabindex="-1"><a class="header-anchor" href="#final-\u548C-const" aria-hidden="true">#</a> final \u548C const</h2><p>\u4F7F\u7528 final \u6216 const \u58F0\u660E\u53D8\u91CF\u53EF\u4EE5\u4F7F\u53D8\u91CF\u4E0D\u53EF\u53D8\uFF0C\u8FD9\u4E24\u4E2A\u5173\u952E\u5B57\u53EF\u4EE5\u66FF\u4EE3 var \u6216\u8005\u52A0\u5728\u4E00\u4E2A\u5177\u4F53\u7684\u7C7B\u578B\u524D\u3002</p><p>\u4E00\u4E2A final \u53D8\u91CF\u53EA\u53EF\u4EE5\u88AB\u8D4B\u503C\u4E00\u6B21\uFF0C\u53EF\u4EE5\u5148\u58F0\u660E\uFF0C\u518D\u8D4B\u503C\uFF0Cconst \u5FC5\u987B\u58F0\u660E\u65F6\u5C31\u8D4B\u503C\u3002\u5168\u5C40 final \u6216\u8005\u7C7B\u7684 final \u53D8\u91CF\u5728\u7B2C\u4E00\u6B21\u4F7F\u7528\u65F6\u624D\u4F1A\u521D\u59CB\u5316\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">final</span> demo <span class="token operator">=</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// not print</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u7C7B\u7684\u5B9E\u4F8B\u53D8\u91CF\u4E0D\u80FD\u662F const\uFF0C\u53EA\u80FD\u662F final\uFF0C\u7C7B\u7684\u9759\u6001\u53D8\u91CF\u53EF\u4EE5\u662F const\uFF0C\u987A\u5E8F\u5FC5\u987B\u662F <code>static const</code>\u3002</p><p>\u5982\u679C final \u6216 const \u4FEE\u9970\u7684\u662F\u5BF9\u8C61\uFF0C\u5219 final \u4FEE\u9970\u7684\u60C5\u51B5\u4E0B\u5BF9\u8C61\u5C5E\u6027\u4ECD\u7136\u53EF\u53D8\uFF0C\u4F46\u662F const \u4E0D\u884C\u3002</p>`,17);function t(e,c){return p}var l=n(a,[["render",t]]);export{l as default};
